2024-10-05 20:03:14.633 | INFO     | webapp:cb_btn_translate:631 - Input dictionary: {'spec': 'prefltlf 3\n\n# Formulas\nF a\nG b\n!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n>, 0, 2\n>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae'}
2024-10-05 20:03:14.633 | DEBUG    | prefltlf2pdfa.prefltlf:parse:111 - Parsing prefltlf formula with auto_complete='none': 
prefltlf 3

# Formulas
F a
G b
!(F(a) | G(b))

# Specification
>, 0, 1
>, 0, 2
>=, 1, 2
2024-10-05 20:03:14.746 | DEBUG    | prefltlf2pdfa.prefltlf:_construct_spec_ir:476 - Intermediate representation based on raw input: 
['1:G(b)  >=  2:!((F(a) | G(b)))',
 '0:F(a)  >  1:G(b)',
 '0:F(a)  >  2:!((F(a) | G(b)))']
2024-10-05 20:03:14.759 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:547 - Clauses from intermediate representation:
set_w={(1, 2)} 
set_p={(0, 1), (0, 2)} 
set_i=set() 
set_j=set()
2024-10-05 20:03:14.760 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:576 - Clauses after applying transitive and reflexive closures:
set_p={(0, 1), (0, 2), (1, 2)} 
set_i={(1, 1), (2, 2), (0, 0)} 
set_j=set()
2024-10-05 20:03:14.760 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:621 - Partial order for input specification:
phi={0: F(a), 1: G(b), 2: !((F(a) | G(b)))}
model={(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)}
model={'(F(a), F(a))', '(!((F(a) | G(b))), !((F(a) | G(b))))', '(G(b), G(b))', '(G(b), !((F(a) | G(b))))', '(F(a), G(b))', '(F(a), !((F(a) | G(b))))'}
2024-10-05 20:03:14.761 | DEBUG    | prefltlf2pdfa.prefltlf:translate:152 - Translating the formula to preference automaton under semantics=`semantics_mp_forall_exists`:
prefltlf 3

# Formulas
F a
G b
!(F(a) | G(b))

# Specification
>, 0, 1
>, 0, 2
>=, 1, 2
2024-10-05 20:03:14.799 | DEBUG    | prefltlf2pdfa.prefltlf:translate:171 - Constructed Automata: {0: F(a), 1: G(b), 2: !((F(a) | G(b)))} 

======== F(a) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'a': 2, '~a': 1}, 2: {'true': 2}}}

======== G(b) ========
{'final_states': {1},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'b': 1, '~b': 2}, 2: {'true': 2}}}

======== !((F(a) | G(b))) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2, 3},
 'transitions': {1: {'a': 3, 'b & ~a': 1, '~a & ~b': 2},
                 2: {'a': 3, '~a': 2},
                 3: {'true': 3}}}

2024-10-05 20:03:14.836 | DEBUG    | prefltlf2pdfa.viz:paut2dot:109 - Options for paut2dot: sa_state=False, sa_class=False, sa_color=False, pg_state=False
2024-10-05 20:03:15.205 | INFO     | webapp:cb_btn_translate:653 - Output dictionary: {'input': {'spec': 'prefltlf 3\n\n# Formulas\nF a\nG b\n!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n>, 0, 2\n>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae'}, 'formula': {'f_str': 'prefltlf 3\n\n# Formulas\nF a\nG b\n!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n>, 0, 2\n>=, 1, 2', 'atoms': ['a', 'b'], 'alphabet': [], 'phi': {0: 'F(a)', 1: 'G(b)', 2: '!((F(a) | G(b)))'}, 'relation': [(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)]}, 'pdfa': {'states': {0: {'name': (1, 1, 1), 'partition': 1}, 1: {'name': (1, 2, 2), 'partition': 2}, 2: {'name': (2, 2, 3), 'partition': 0}, 3: {'name': (2, 1, 3), 'partition': 0}}, 'atoms': {'a', 'b'}, 'alphabet': [], 'transitions': {0: {'b & !a': 0, 'a & b': 3, '!a & !b': 1, 'a & !b': 2}, 1: {'!a': 1, 'a': 2}, 2: {'true': 2}, 3: {'b': 3, '!b': 2}}, 'init_state': 0, 'pref_graph': {'nodes': {0: {'name': 'F(a)'}, 1: {'name': 'G(b)'}, 2: {'name': '!((F(a) | G(b)))'}}, 'edges': {0: [0], 1: [0, 1], 2: [0, 1, 2]}}}}
2024-10-05 20:03:21.659 | INFO     | webapp:cb_btn_translate:631 - Input dictionary: {'spec': 'prefltlf 3\n\n# Formulas\nF a\nG b\n!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n>, 0, 2\n>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': True, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae'}
2024-10-05 20:03:21.660 | DEBUG    | prefltlf2pdfa.prefltlf:parse:111 - Parsing prefltlf formula with auto_complete='none': 
prefltlf 3

# Formulas
F a
G b
!(F(a) | G(b))

# Specification
>, 0, 1
>, 0, 2
>=, 1, 2
2024-10-05 20:03:21.724 | DEBUG    | prefltlf2pdfa.prefltlf:_construct_spec_ir:476 - Intermediate representation based on raw input: 
['1:G(b)  >=  2:!((F(a) | G(b)))',
 '0:F(a)  >  1:G(b)',
 '0:F(a)  >  2:!((F(a) | G(b)))']
2024-10-05 20:03:21.737 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:547 - Clauses from intermediate representation:
set_w={(1, 2)} 
set_p={(0, 1), (0, 2)} 
set_i=set() 
set_j=set()
2024-10-05 20:03:21.738 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:576 - Clauses after applying transitive and reflexive closures:
set_p={(0, 1), (0, 2), (1, 2)} 
set_i={(1, 1), (2, 2), (0, 0)} 
set_j=set()
2024-10-05 20:03:21.739 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:621 - Partial order for input specification:
phi={0: F(a), 1: G(b), 2: !((F(a) | G(b)))}
model={(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)}
model={'(F(a), F(a))', '(!((F(a) | G(b))), !((F(a) | G(b))))', '(G(b), G(b))', '(G(b), !((F(a) | G(b))))', '(F(a), G(b))', '(F(a), !((F(a) | G(b))))'}
2024-10-05 20:03:21.740 | DEBUG    | prefltlf2pdfa.prefltlf:translate:152 - Translating the formula to preference automaton under semantics=`semantics_mp_forall_exists`:
prefltlf 3

# Formulas
F a
G b
!(F(a) | G(b))

# Specification
>, 0, 1
>, 0, 2
>=, 1, 2
2024-10-05 20:03:21.779 | DEBUG    | prefltlf2pdfa.prefltlf:translate:171 - Constructed Automata: {0: F(a), 1: G(b), 2: !((F(a) | G(b)))} 

======== F(a) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'a': 2, '~a': 1}, 2: {'true': 2}}}

======== G(b) ========
{'final_states': {1},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'b': 1, '~b': 2}, 2: {'true': 2}}}

======== !((F(a) | G(b))) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2, 3},
 'transitions': {1: {'a': 3, 'b & ~a': 1, '~a & ~b': 2},
                 2: {'a': 3, '~a': 2},
                 3: {'true': 3}}}

2024-10-05 20:03:21.809 | DEBUG    | prefltlf2pdfa.viz:paut2dot:109 - Options for paut2dot: sa_state=False, sa_class=False, sa_color=True, pg_state=False
2024-10-05 20:03:21.946 | INFO     | webapp:cb_btn_translate:653 - Output dictionary: {'input': {'spec': 'prefltlf 3\n\n# Formulas\nF a\nG b\n!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n>, 0, 2\n>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': True, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae'}, 'formula': {'f_str': 'prefltlf 3\n\n# Formulas\nF a\nG b\n!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n>, 0, 2\n>=, 1, 2', 'atoms': ['a', 'b'], 'alphabet': [], 'phi': {0: 'F(a)', 1: 'G(b)', 2: '!((F(a) | G(b)))'}, 'relation': [(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)]}, 'pdfa': {'states': {0: {'name': (1, 1, 1), 'partition': 1}, 1: {'name': (1, 2, 2), 'partition': 2}, 2: {'name': (2, 2, 3), 'partition': 0}, 3: {'name': (2, 1, 3), 'partition': 0}}, 'atoms': {'a', 'b'}, 'alphabet': [], 'transitions': {0: {'b & !a': 0, 'a & b': 3, '!a & !b': 1, 'a & !b': 2}, 1: {'!a': 1, 'a': 2}, 2: {'true': 2}, 3: {'b': 3, '!b': 2}}, 'init_state': 0, 'pref_graph': {'nodes': {0: {'name': 'F(a)'}, 1: {'name': 'G(b)'}, 2: {'name': '!((F(a) | G(b)))'}}, 'edges': {0: [0], 1: [0, 1], 2: [0, 1, 2]}}}}
2024-10-05 20:04:12.692 | INFO     | webapp:cb_btn_translate:631 - Input dictionary: {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n>, 0, 2\n>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': True, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae'}
2024-10-05 20:04:12.693 | DEBUG    | prefltlf2pdfa.prefltlf:parse:111 - Parsing prefltlf formula with auto_complete='none': 
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
>, 0, 2
>=, 1, 2
2024-10-05 20:04:12.718 | ERROR    | webapp:cb_btn_translate:672 - Index of LTLf formula out of bounds. |Phi|=2, r_index=0.
Traceback (most recent call last):

  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 995, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7f14dab08860>
    └ <Thread(Thread-20 (process_request_thread), started daemon 139725764949760)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 1038, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7f14dab08540>
    └ <Thread(Thread-20 (process_request_thread), started daemon 139725764949760)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 975, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-20 (process_request_thread), started daemon 139725764949760)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53236)>, ('127.0.0.1', 53236))
    │    │        └ <Thread(Thread-20 (process_request_thread), started daemon 139725764949760)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7f1470b5f050>>
    └ <Thread(Thread-20 (process_request_thread), started daemon 139725764949760)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 691, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 53236)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53236)>
    │    └ <function BaseServer.finish_request at 0x7f1478d0aa20>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f1470b5f050>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 361, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f1470b5f050>
    │    │                   │        └ ('127.0.0.1', 53236)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53236)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f1470b5f050>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 755, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7f147897fe20>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f1471150bd0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7f14788a4a40>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f1471150bd0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7f1471150bd0>>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'webapp'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f1470b5f050>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7f1471150bd0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7f1470ba8cc0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f1470ba8d60>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f1470ba8d60>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7f1478411800>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7f1478410f40>
               └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7f1478410ea0>
         └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/_dash-update-component'
           │    │           │    │              └ <Rule '/_dash-update-component' (POST, OPTIONS) -> /_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7f1470addbc0>, '_dash_assets.static': <bound method Blueprint.send...
           │    │           └ <Flask 'webapp'>
           │    └ <function Flask.ensure_sync at 0x7f1478411120>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/dash.py", line 1373, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7f1470b99d40>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/_callback.py", line 465, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)
                   │                │      │            └ {}
                   │                │      └ [3, None, 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n>, 0, 2\n>=, 1, 2', None, ['chk_c...
                   │                └ <function cb_btn_translate at 0x7f1470add1c0>
                   └ <function _invoke_callback at 0x7f14781ba020>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/_callback.py", line 40, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (3, None, 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n>, 0, 2\n>=, 1, 2', None, ['chk_c...
           └ <function cb_btn_translate at 0x7f1470add1c0>

> File "/mnt/e/OneDrive - The University of Texas at Austin/4- Ongoing Research/4- Preference-based Planning/0-Code/prefltlf2pdfa-webapp/webapp.py", line 640, in cb_btn_translate
    phi, pdfa = translate_to_pdfa(input_dict)
                │                 └ {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n>, 0, 2\n>=, 1, 2', 'alphabet': No...
                └ <function translate_to_pdfa at 0x7f1470adf6a0>

  File "/mnt/e/OneDrive - The University of Texas at Austin/4- Ongoing Research/4- Preference-based Planning/0-Code/prefltlf2pdfa-webapp/webapp.py", line 471, in translate_to_pdfa
    phi = pp.PrefLTLf(input_dict["spec"], alphabet=alphabet)
          │  │        │                            └ set()
          │  │        └ {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n>, 0, 2\n>=, 1, 2', 'alphabet': No...
          │  └ <class 'prefltlf2pdfa.prefltlf.PrefLTLf'>
          └ <module 'prefltlf2pdfa' from '/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/__init__.py'>

  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/prefltlf.py", line 52, in __init__
    self.parse(
    │    └ <function PrefLTLf.parse at 0x7f1470b15f80>
    └ <PrefLTLf Formula at 139725771743184>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/prefltlf.py", line 126, in parse
    phi, spec_ir = self._construct_spec_ir()
                   │    └ <function PrefLTLf._construct_spec_ir at 0x7f1470b158a0>
                   └ <PrefLTLf Formula at 139725771743184>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/prefltlf.py", line 462, in _construct_spec_ir
    assert r_index in phi, f"Index of LTLf formula out of bounds. |Phi|={len(phi)}, r_index={l_index}."
           │          └ {0: F(a), 1: G(b)}
           └ 2

AssertionError: Index of LTLf formula out of bounds. |Phi|=2, r_index=0.
2024-10-05 20:04:41.199 | INFO     | webapp:cb_btn_translate:631 - Input dictionary: {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': True, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae'}
2024-10-05 20:04:41.199 | DEBUG    | prefltlf2pdfa.prefltlf:parse:111 - Parsing prefltlf formula with auto_complete='none': 
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 20:04:41.221 | DEBUG    | prefltlf2pdfa.prefltlf:_construct_spec_ir:476 - Intermediate representation based on raw input: 
['0:F(a)  >  1:G(b)']
2024-10-05 20:04:41.238 | ERROR    | prefltlf2pdfa.prefltlf:parse:131 - The set of conditions phi = {G(b), F(a)} is not complete
2024-10-05 20:04:41.239 | ERROR    | webapp:cb_btn_translate:672 - The set of conditions phi = {G(b), F(a)} is not complete
Traceback (most recent call last):

  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 995, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7f14dab08860>
    └ <Thread(Thread-21 (process_request_thread), started daemon 139725764949760)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 1038, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7f14dab08540>
    └ <Thread(Thread-21 (process_request_thread), started daemon 139725764949760)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 975, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-21 (process_request_thread), started daemon 139725764949760)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53238)>, ('127.0.0.1', 53238))
    │    │        └ <Thread(Thread-21 (process_request_thread), started daemon 139725764949760)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7f1470b5f050>>
    └ <Thread(Thread-21 (process_request_thread), started daemon 139725764949760)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 691, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 53238)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53238)>
    │    └ <function BaseServer.finish_request at 0x7f1478d0aa20>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f1470b5f050>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 361, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f1470b5f050>
    │    │                   │        └ ('127.0.0.1', 53238)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53238)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f1470b5f050>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 755, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7f147897fe20>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f14d7d81e90>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7f14788a4a40>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f14d7d81e90>
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7f14d7d81e90>>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'webapp'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f1470b5f050>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7f14d7d81e90>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7f14d7ed85e0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f14d7ed8d60>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f14d7ed8d60>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7f1478411800>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7f1478410f40>
               └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7f1478410ea0>
         └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/_dash-update-component'
           │    │           │    │              └ <Rule '/_dash-update-component' (POST, OPTIONS) -> /_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7f1470addbc0>, '_dash_assets.static': <bound method Blueprint.send...
           │    │           └ <Flask 'webapp'>
           │    └ <function Flask.ensure_sync at 0x7f1478411120>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/dash.py", line 1373, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7f14d7d83640>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/_callback.py", line 465, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)
                   │                │      │            └ {}
                   │                │      └ [4, None, 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', None, ['chk...
                   │                └ <function cb_btn_translate at 0x7f1470add1c0>
                   └ <function _invoke_callback at 0x7f14781ba020>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/_callback.py", line 40, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (4, None, 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', None, ['chk...
           └ <function cb_btn_translate at 0x7f1470add1c0>

> File "/mnt/e/OneDrive - The University of Texas at Austin/4- Ongoing Research/4- Preference-based Planning/0-Code/prefltlf2pdfa-webapp/webapp.py", line 640, in cb_btn_translate
    phi, pdfa = translate_to_pdfa(input_dict)
                │                 └ {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': ...
                └ <function translate_to_pdfa at 0x7f1470adf6a0>

  File "/mnt/e/OneDrive - The University of Texas at Austin/4- Ongoing Research/4- Preference-based Planning/0-Code/prefltlf2pdfa-webapp/webapp.py", line 471, in translate_to_pdfa
    phi = pp.PrefLTLf(input_dict["spec"], alphabet=alphabet)
          │  │        │                            └ set()
          │  │        └ {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': ...
          │  └ <class 'prefltlf2pdfa.prefltlf.PrefLTLf'>
          └ <module 'prefltlf2pdfa' from '/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/__init__.py'>

  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/prefltlf.py", line 52, in __init__
    self.parse(
    │    └ <function PrefLTLf.parse at 0x7f1470b15f80>
    └ <PrefLTLf Formula at 139727497344912>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/prefltlf.py", line 132, in parse
    raise ValueError(f"The set of conditions phi = {set(phi.values())} is not complete")

ValueError: The set of conditions phi = {G(b), F(a)} is not complete
2024-10-05 20:04:49.774 | INFO     | webapp:cb_btn_translate:631 - Input dictionary: {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': True, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae'}
2024-10-05 20:04:49.775 | DEBUG    | prefltlf2pdfa.prefltlf:parse:111 - Parsing prefltlf formula with auto_complete='none': 
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 20:04:49.816 | DEBUG    | prefltlf2pdfa.prefltlf:_construct_spec_ir:476 - Intermediate representation based on raw input: 
['0:F(a)  >  1:G(b)']
2024-10-05 20:04:49.839 | ERROR    | prefltlf2pdfa.prefltlf:parse:131 - The set of conditions phi = {G(b), F(a)} is not complete
2024-10-05 20:04:49.840 | ERROR    | webapp:cb_btn_translate:672 - The set of conditions phi = {G(b), F(a)} is not complete
Traceback (most recent call last):

  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 995, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7f14dab08860>
    └ <Thread(Thread-22 (process_request_thread), started daemon 139725764949760)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 1038, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7f14dab08540>
    └ <Thread(Thread-22 (process_request_thread), started daemon 139725764949760)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 975, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-22 (process_request_thread), started daemon 139725764949760)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53240)>, ('127.0.0.1', 53240))
    │    │        └ <Thread(Thread-22 (process_request_thread), started daemon 139725764949760)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7f1470b5f050>>
    └ <Thread(Thread-22 (process_request_thread), started daemon 139725764949760)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 691, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 53240)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53240)>
    │    └ <function BaseServer.finish_request at 0x7f1478d0aa20>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f1470b5f050>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 361, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f1470b5f050>
    │    │                   │        └ ('127.0.0.1', 53240)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53240)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f1470b5f050>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 755, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7f147897fe20>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f14d7dbd950>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7f14788a4a40>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f14d7dbd950>
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7f14d7dbd950>>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'webapp'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f1470b5f050>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7f14d7dbd950>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7f14d7eda5c0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f14d7eda520>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f14d7eda520>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7f1478411800>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7f1478410f40>
               └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7f1478410ea0>
         └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/_dash-update-component'
           │    │           │    │              └ <Rule '/_dash-update-component' (POST, OPTIONS) -> /_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7f1470addbc0>, '_dash_assets.static': <bound method Blueprint.send...
           │    │           └ <Flask 'webapp'>
           │    └ <function Flask.ensure_sync at 0x7f1478411120>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/dash.py", line 1373, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7f14d7d83640>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/_callback.py", line 465, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)
                   │                │      │            └ {}
                   │                │      └ [5, None, 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', None, ['chk...
                   │                └ <function cb_btn_translate at 0x7f1470add1c0>
                   └ <function _invoke_callback at 0x7f14781ba020>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/_callback.py", line 40, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (5, None, 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', None, ['chk...
           └ <function cb_btn_translate at 0x7f1470add1c0>

> File "/mnt/e/OneDrive - The University of Texas at Austin/4- Ongoing Research/4- Preference-based Planning/0-Code/prefltlf2pdfa-webapp/webapp.py", line 640, in cb_btn_translate
    phi, pdfa = translate_to_pdfa(input_dict)
                │                 └ {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': ...
                └ <function translate_to_pdfa at 0x7f1470adf6a0>

  File "/mnt/e/OneDrive - The University of Texas at Austin/4- Ongoing Research/4- Preference-based Planning/0-Code/prefltlf2pdfa-webapp/webapp.py", line 471, in translate_to_pdfa
    phi = pp.PrefLTLf(input_dict["spec"], alphabet=alphabet)
          │  │        │                            └ set()
          │  │        └ {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': ...
          │  └ <class 'prefltlf2pdfa.prefltlf.PrefLTLf'>
          └ <module 'prefltlf2pdfa' from '/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/__init__.py'>

  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/prefltlf.py", line 52, in __init__
    self.parse(
    │    └ <function PrefLTLf.parse at 0x7f1470b15f80>
    └ <PrefLTLf Formula at 139727497529168>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/prefltlf.py", line 132, in parse
    raise ValueError(f"The set of conditions phi = {set(phi.values())} is not complete")

ValueError: The set of conditions phi = {G(b), F(a)} is not complete
2024-10-05 20:09:05.710 | INFO     | webapp:cb_btn_translate:635 - Input dictionary: {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'autocomplete_none'}
2024-10-05 20:09:05.710 | DEBUG    | prefltlf2pdfa.prefltlf:parse:111 - Parsing prefltlf formula with auto_complete='autocomplete_none': 
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 20:09:05.711 | ERROR    | prefltlf2pdfa.prefltlf:parse:115 - Unknown auto_complete value 'autocomplete_none' to parse function. Accepted values are ['none', 'incomparable', 'minimal']. New auto_complete value is set to 'none'.
2024-10-05 20:09:05.741 | DEBUG    | prefltlf2pdfa.prefltlf:_construct_spec_ir:476 - Intermediate representation based on raw input: 
['0:F(a)  >  1:G(b)']
2024-10-05 20:09:05.756 | ERROR    | prefltlf2pdfa.prefltlf:parse:131 - The set of conditions phi = {G(b), F(a)} is not complete
2024-10-05 20:09:05.757 | ERROR    | webapp:cb_btn_translate:676 - The set of conditions phi = {G(b), F(a)} is not complete
Traceback (most recent call last):

  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 995, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7fe21ac38860>
    └ <Thread(Thread-10 (process_request_thread), started daemon 140607221655296)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 1038, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7fe21ac38540>
    └ <Thread(Thread-10 (process_request_thread), started daemon 140607221655296)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 975, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-10 (process_request_thread), started daemon 140607221655296)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53260)>, ('127.0.0.1', 53260))
    │    │        └ <Thread(Thread-10 (process_request_thread), started daemon 140607221655296)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7fe1b11c6090>>
    └ <Thread(Thread-10 (process_request_thread), started daemon 140607221655296)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 691, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 53260)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53260)>
    │    └ <function BaseServer.finish_request at 0x7fe1b8e42a20>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7fe1b11c6090>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 361, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7fe1b11c6090>
    │    │                   │        └ ('127.0.0.1', 53260)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53260)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7fe1b11c6090>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 755, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7fe1b8aafe20>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7fe1b1db29d0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7fe1b89d4a40>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7fe1b1db29d0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7fe1b1db29d0>>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'webapp'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7fe1b11c6090>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7fe1b1db29d0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7fe1b0cc2fc0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7fe1b0c08f40>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7fe1b0c08f40>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7fe1b8541800>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7fe1b8540f40>
               └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7fe1b8540ea0>
         └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/_dash-update-component'
           │    │           │    │              └ <Rule '/_dash-update-component' (OPTIONS, POST) -> /_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7fe1b0c08c20>, '_dash_assets.static': <bound method Blueprint.send...
           │    │           └ <Flask 'webapp'>
           │    └ <function Flask.ensure_sync at 0x7fe1b8541120>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/dash.py", line 1373, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7fe1b0cd2c40>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/_callback.py", line 465, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)
                   │                │      │            └ {}
                   │                │      └ [1, None, 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', None, None,...
                   │                └ <function cb_btn_translate at 0x7fe1b0c08680>
                   └ <function _invoke_callback at 0x7fe1b82ee020>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/_callback.py", line 40, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (1, None, 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', None, None,...
           └ <function cb_btn_translate at 0x7fe1b0c08680>

> File "/mnt/e/OneDrive - The University of Texas at Austin/4- Ongoing Research/4- Preference-based Planning/0-Code/prefltlf2pdfa-webapp/webapp.py", line 644, in cb_btn_translate
    phi, pdfa = translate_to_pdfa(input_dict)
                │                 └ {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': ...
                └ <function translate_to_pdfa at 0x7fe1b0c0ad40>

  File "/mnt/e/OneDrive - The University of Texas at Austin/4- Ongoing Research/4- Preference-based Planning/0-Code/prefltlf2pdfa-webapp/webapp.py", line 473, in translate_to_pdfa
    phi = pp.PrefLTLf(input_dict["spec"], alphabet=alphabet, auto_complete=input_dict["autocomplete"])
          │  │        │                            │                       └ {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': ...
          │  │        │                            └ set()
          │  │        └ {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': ...
          │  └ <class 'prefltlf2pdfa.prefltlf.PrefLTLf'>
          └ <module 'prefltlf2pdfa' from '/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/__init__.py'>

  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/prefltlf.py", line 52, in __init__
    self.parse(
    │    └ <function PrefLTLf.parse at 0x7fe1b0c69f80>
    └ <PrefLTLf Formula at 140607309756880>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/prefltlf.py", line 132, in parse
    raise ValueError(f"The set of conditions phi = {set(phi.values())} is not complete")

ValueError: The set of conditions phi = {G(b), F(a)} is not complete
2024-10-05 20:09:09.752 | INFO     | webapp:cb_btn_translate:635 - Input dictionary: {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'autocomplete_incomparable'}
2024-10-05 20:09:09.753 | DEBUG    | prefltlf2pdfa.prefltlf:parse:111 - Parsing prefltlf formula with auto_complete='autocomplete_incomparable': 
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 20:09:09.754 | ERROR    | prefltlf2pdfa.prefltlf:parse:115 - Unknown auto_complete value 'autocomplete_incomparable' to parse function. Accepted values are ['none', 'incomparable', 'minimal']. New auto_complete value is set to 'none'.
2024-10-05 20:09:09.772 | DEBUG    | prefltlf2pdfa.prefltlf:_construct_spec_ir:476 - Intermediate representation based on raw input: 
['0:F(a)  >  1:G(b)']
2024-10-05 20:09:09.786 | ERROR    | prefltlf2pdfa.prefltlf:parse:131 - The set of conditions phi = {G(b), F(a)} is not complete
2024-10-05 20:09:09.787 | ERROR    | webapp:cb_btn_translate:676 - The set of conditions phi = {G(b), F(a)} is not complete
Traceback (most recent call last):

  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 995, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7fe21ac38860>
    └ <Thread(Thread-11 (process_request_thread), started daemon 140607221655296)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 1038, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7fe21ac38540>
    └ <Thread(Thread-11 (process_request_thread), started daemon 140607221655296)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 975, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-11 (process_request_thread), started daemon 140607221655296)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53262)>, ('127.0.0.1', 53262))
    │    │        └ <Thread(Thread-11 (process_request_thread), started daemon 140607221655296)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7fe1b11c6090>>
    └ <Thread(Thread-11 (process_request_thread), started daemon 140607221655296)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 691, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 53262)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53262)>
    │    └ <function BaseServer.finish_request at 0x7fe1b8e42a20>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7fe1b11c6090>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 361, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7fe1b11c6090>
    │    │                   │        └ ('127.0.0.1', 53262)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53262)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7fe1b11c6090>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 755, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7fe1b8aafe20>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7fe1b1530050>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7fe1b89d4a40>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7fe1b1530050>
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7fe1b1530050>>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'webapp'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7fe1b11c6090>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7fe1b1530050>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7fe1b0cc3100>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7fe1b0cc3ec0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7fe1b0cc3ec0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7fe1b8541800>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7fe1b8540f40>
               └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7fe1b8540ea0>
         └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/_dash-update-component'
           │    │           │    │              └ <Rule '/_dash-update-component' (OPTIONS, POST) -> /_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7fe1b0c08c20>, '_dash_assets.static': <bound method Blueprint.send...
           │    │           └ <Flask 'webapp'>
           │    └ <function Flask.ensure_sync at 0x7fe1b8541120>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/dash.py", line 1373, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7fe1b0ca2f40>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/_callback.py", line 465, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)
                   │                │      │            └ {}
                   │                │      └ [2, None, 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', None, None,...
                   │                └ <function cb_btn_translate at 0x7fe1b0c08680>
                   └ <function _invoke_callback at 0x7fe1b82ee020>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/_callback.py", line 40, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (2, None, 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', None, None,...
           └ <function cb_btn_translate at 0x7fe1b0c08680>

> File "/mnt/e/OneDrive - The University of Texas at Austin/4- Ongoing Research/4- Preference-based Planning/0-Code/prefltlf2pdfa-webapp/webapp.py", line 644, in cb_btn_translate
    phi, pdfa = translate_to_pdfa(input_dict)
                │                 └ {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': ...
                └ <function translate_to_pdfa at 0x7fe1b0c0ad40>

  File "/mnt/e/OneDrive - The University of Texas at Austin/4- Ongoing Research/4- Preference-based Planning/0-Code/prefltlf2pdfa-webapp/webapp.py", line 473, in translate_to_pdfa
    phi = pp.PrefLTLf(input_dict["spec"], alphabet=alphabet, auto_complete=input_dict["autocomplete"])
          │  │        │                            │                       └ {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': ...
          │  │        │                            └ set()
          │  │        └ {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': ...
          │  └ <class 'prefltlf2pdfa.prefltlf.PrefLTLf'>
          └ <module 'prefltlf2pdfa' from '/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/__init__.py'>

  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/prefltlf.py", line 52, in __init__
    self.parse(
    │    └ <function PrefLTLf.parse at 0x7fe1b0c69f80>
    └ <PrefLTLf Formula at 140607311806416>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/prefltlf.py", line 132, in parse
    raise ValueError(f"The set of conditions phi = {set(phi.values())} is not complete")

ValueError: The set of conditions phi = {G(b), F(a)} is not complete
2024-10-05 20:09:13.093 | INFO     | webapp:cb_btn_translate:635 - Input dictionary: {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'autocomplete_incomparable'}
2024-10-05 20:09:13.094 | DEBUG    | prefltlf2pdfa.prefltlf:parse:111 - Parsing prefltlf formula with auto_complete='autocomplete_incomparable': 
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 20:09:13.095 | ERROR    | prefltlf2pdfa.prefltlf:parse:115 - Unknown auto_complete value 'autocomplete_incomparable' to parse function. Accepted values are ['none', 'incomparable', 'minimal']. New auto_complete value is set to 'none'.
2024-10-05 20:09:13.131 | DEBUG    | prefltlf2pdfa.prefltlf:_construct_spec_ir:476 - Intermediate representation based on raw input: 
['0:F(a)  >  1:G(b)']
2024-10-05 20:09:13.158 | ERROR    | prefltlf2pdfa.prefltlf:parse:131 - The set of conditions phi = {G(b), F(a)} is not complete
2024-10-05 20:09:13.159 | ERROR    | webapp:cb_btn_translate:676 - The set of conditions phi = {G(b), F(a)} is not complete
Traceback (most recent call last):

  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 995, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7fe21ac38860>
    └ <Thread(Thread-12 (process_request_thread), started daemon 140607221655296)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 1038, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7fe21ac38540>
    └ <Thread(Thread-12 (process_request_thread), started daemon 140607221655296)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 975, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-12 (process_request_thread), started daemon 140607221655296)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53264)>, ('127.0.0.1', 53264))
    │    │        └ <Thread(Thread-12 (process_request_thread), started daemon 140607221655296)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7fe1b11c6090>>
    └ <Thread(Thread-12 (process_request_thread), started daemon 140607221655296)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 691, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 53264)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53264)>
    │    └ <function BaseServer.finish_request at 0x7fe1b8e42a20>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7fe1b11c6090>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 361, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7fe1b11c6090>
    │    │                   │        └ ('127.0.0.1', 53264)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53264)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7fe1b11c6090>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 755, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7fe1b8aafe20>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7fe217f948d0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7fe1b89d4a40>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7fe217f948d0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7fe217f948d0>>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'webapp'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7fe1b11c6090>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7fe217f948d0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7fe1b0b5eca0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7fe1b0b5ec00>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7fe1b0b5ec00>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7fe1b8541800>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7fe1b8540f40>
               └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7fe1b8540ea0>
         └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/_dash-update-component'
           │    │           │    │              └ <Rule '/_dash-update-component' (OPTIONS, POST) -> /_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7fe1b0c08c20>, '_dash_assets.static': <bound method Blueprint.send...
           │    │           └ <Flask 'webapp'>
           │    └ <function Flask.ensure_sync at 0x7fe1b8541120>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/dash.py", line 1373, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7fe1b0b48900>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/_callback.py", line 465, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)
                   │                │      │            └ {}
                   │                │      └ [3, None, 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', None, None,...
                   │                └ <function cb_btn_translate at 0x7fe1b0c08680>
                   └ <function _invoke_callback at 0x7fe1b82ee020>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/_callback.py", line 40, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (3, None, 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', None, None,...
           └ <function cb_btn_translate at 0x7fe1b0c08680>

> File "/mnt/e/OneDrive - The University of Texas at Austin/4- Ongoing Research/4- Preference-based Planning/0-Code/prefltlf2pdfa-webapp/webapp.py", line 644, in cb_btn_translate
    phi, pdfa = translate_to_pdfa(input_dict)
                │                 └ {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': ...
                └ <function translate_to_pdfa at 0x7fe1b0c0ad40>

  File "/mnt/e/OneDrive - The University of Texas at Austin/4- Ongoing Research/4- Preference-based Planning/0-Code/prefltlf2pdfa-webapp/webapp.py", line 473, in translate_to_pdfa
    phi = pp.PrefLTLf(input_dict["spec"], alphabet=alphabet, auto_complete=input_dict["autocomplete"])
          │  │        │                            │                       └ {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': ...
          │  │        │                            └ set()
          │  │        └ {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': ...
          │  └ <class 'prefltlf2pdfa.prefltlf.PrefLTLf'>
          └ <module 'prefltlf2pdfa' from '/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/__init__.py'>

  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/prefltlf.py", line 52, in __init__
    self.parse(
    │    └ <function PrefLTLf.parse at 0x7fe1b0c69f80>
    └ <PrefLTLf Formula at 140607310094864>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/prefltlf.py", line 132, in parse
    raise ValueError(f"The set of conditions phi = {set(phi.values())} is not complete")

ValueError: The set of conditions phi = {G(b), F(a)} is not complete
2024-10-05 20:11:07.268 | INFO     | webapp:cb_btn_translate:635 - Input dictionary: {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'none'}
2024-10-05 20:11:07.269 | DEBUG    | prefltlf2pdfa.prefltlf:parse:111 - Parsing prefltlf formula with auto_complete='none': 
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 20:11:07.295 | DEBUG    | prefltlf2pdfa.prefltlf:_construct_spec_ir:476 - Intermediate representation based on raw input: 
['0:F(a)  >  1:G(b)']
2024-10-05 20:11:07.312 | ERROR    | prefltlf2pdfa.prefltlf:parse:131 - The set of conditions phi = {G(b), F(a)} is not complete
2024-10-05 20:11:07.313 | ERROR    | webapp:cb_btn_translate:676 - The set of conditions phi = {G(b), F(a)} is not complete
Traceback (most recent call last):

  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 995, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7f880621c860>
    └ <Thread(Thread-10 (process_request_thread), started daemon 140220398257920)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 1038, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7f880621c540>
    └ <Thread(Thread-10 (process_request_thread), started daemon 140220398257920)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 975, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-10 (process_request_thread), started daemon 140220398257920)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53302)>, ('127.0.0.1', 53302))
    │    │        └ <Thread(Thread-10 (process_request_thread), started daemon 140220398257920)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7f879cd74050>>
    └ <Thread(Thread-10 (process_request_thread), started daemon 140220398257920)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 691, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 53302)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53302)>
    │    └ <function BaseServer.finish_request at 0x7f87a4416a20>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f879cd74050>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 361, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f879cd74050>
    │    │                   │        └ ('127.0.0.1', 53302)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53302)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f879cd74050>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 755, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7f87a4083e20>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f879c38cd10>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7f87a3faca40>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f879c38cd10>
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7f879c38cd10>>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'webapp'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f879cd74050>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7f879c38cd10>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7f879c216fc0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f879c3b3100>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f879c3b3100>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7f87a3b15800>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7f87a3b14f40>
               └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7f87a3b14ea0>
         └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/_dash-update-component'
           │    │           │    │              └ <Rule '/_dash-update-component' (OPTIONS, POST) -> /_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7f879c3b1f80>, '_dash_assets.static': <bound method Blueprint.send...
           │    │           └ <Flask 'webapp'>
           │    └ <function Flask.ensure_sync at 0x7f87a3b15120>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/dash.py", line 1373, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7f879c3ace80>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/_callback.py", line 465, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)
                   │                │      │            └ {}
                   │                │      └ [1, None, 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', None, None,...
                   │                └ <function cb_btn_translate at 0x7f879c3b2160>
                   └ <function _invoke_callback at 0x7f87a38b6020>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/_callback.py", line 40, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (1, None, 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', None, None,...
           └ <function cb_btn_translate at 0x7f879c3b2160>

> File "/mnt/e/OneDrive - The University of Texas at Austin/4- Ongoing Research/4- Preference-based Planning/0-Code/prefltlf2pdfa-webapp/webapp.py", line 644, in cb_btn_translate
    phi, pdfa = translate_to_pdfa(input_dict)
                │                 └ {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': ...
                └ <function translate_to_pdfa at 0x7f879c3b32e0>

  File "/mnt/e/OneDrive - The University of Texas at Austin/4- Ongoing Research/4- Preference-based Planning/0-Code/prefltlf2pdfa-webapp/webapp.py", line 473, in translate_to_pdfa
    phi = pp.PrefLTLf(input_dict["spec"], alphabet=alphabet, auto_complete=input_dict["autocomplete"])
          │  │        │                            │                       └ {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': ...
          │  │        │                            └ set()
          │  │        └ {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': ...
          │  └ <class 'prefltlf2pdfa.prefltlf.PrefLTLf'>
          └ <module 'prefltlf2pdfa' from '/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/__init__.py'>

  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/prefltlf.py", line 52, in __init__
    self.parse(
    │    └ <function PrefLTLf.parse at 0x7f879c399f80>
    └ <PrefLTLf Formula at 140220434845840>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/prefltlf.py", line 132, in parse
    raise ValueError(f"The set of conditions phi = {set(phi.values())} is not complete")

ValueError: The set of conditions phi = {G(b), F(a)} is not complete
2024-10-05 20:11:16.869 | INFO     | webapp:cb_btn_translate:635 - Input dictionary: {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'minimal'}
2024-10-05 20:11:16.870 | DEBUG    | prefltlf2pdfa.prefltlf:parse:111 - Parsing prefltlf formula with auto_complete='minimal': 
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 20:11:16.902 | DEBUG    | prefltlf2pdfa.prefltlf:_construct_spec_ir:476 - Intermediate representation based on raw input: 
['0:F(a)  >  1:G(b)']
2024-10-05 20:11:16.921 | DEBUG    | prefltlf2pdfa.prefltlf:_auto_complete:503 - Intermediate representation based on raw input: ['0:F(a)  >  1:G(b)', '0:F(a)  >=  2:!((F(a) | G(b)))', '1:G(b)  >=  2:!((F(a) | G(b)))', '2:!((F(a) | G(b)))  >=  2:!((F(a) | G(b)))']
2024-10-05 20:11:16.922 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:547 - Clauses from intermediate representation:
set_w={(0, 2), (1, 2), (2, 2)} 
set_p={(0, 1)} 
set_i=set() 
set_j=set()
2024-10-05 20:11:16.922 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:576 - Clauses after applying transitive and reflexive closures:
set_p={(0, 1), (0, 2), (1, 2)} 
set_i={(0, 0), (1, 1), (2, 2)} 
set_j=set()
2024-10-05 20:11:16.923 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:621 - Partial order for input specification:
phi={0: F(a), 1: G(b), 2: !((F(a) | G(b)))}
model={(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)}
model={'(G(b), !((F(a) | G(b))))', '(F(a), G(b))', '(F(a), !((F(a) | G(b))))', '(F(a), F(a))', '(G(b), G(b))', '(!((F(a) | G(b))), !((F(a) | G(b))))'}
2024-10-05 20:11:16.924 | DEBUG    | prefltlf2pdfa.prefltlf:translate:152 - Translating the formula to preference automaton under semantics=`semantics_mp_forall_exists`:
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 20:11:16.967 | DEBUG    | prefltlf2pdfa.prefltlf:translate:171 - Constructed Automata: {0: F(a), 1: G(b), 2: !((F(a) | G(b)))} 

======== F(a) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'a': 2, '~a': 1}, 2: {'true': 2}}}

======== G(b) ========
{'final_states': {1},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'b': 1, '~b': 2}, 2: {'true': 2}}}

======== !((F(a) | G(b))) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2, 3},
 'transitions': {1: {'a': 3, 'b & ~a': 1, '~a & ~b': 2},
                 2: {'a': 3, '~a': 2},
                 3: {'true': 3}}}

2024-10-05 20:11:17.001 | DEBUG    | prefltlf2pdfa.viz:paut2dot:109 - Options for paut2dot: sa_state=False, sa_class=False, sa_color=False, pg_state=False
2024-10-05 20:11:17.154 | INFO     | webapp:cb_btn_translate:657 - Output dictionary: {'input': {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'minimal'}, 'formula': {'f_str': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'atoms': ['b', 'a'], 'alphabet': [], 'phi': {0: 'F(a)', 1: 'G(b)', 2: '!((F(a) | G(b)))'}, 'relation': [(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)]}, 'pdfa': {'states': {0: {'name': (1, 1, 1), 'partition': 1}, 1: {'name': (1, 2, 2), 'partition': 2}, 2: {'name': (2, 2, 3), 'partition': 0}, 3: {'name': (2, 1, 3), 'partition': 0}}, 'atoms': {'b', 'a'}, 'alphabet': [], 'transitions': {0: {'!a & !b': 1, 'b & !a': 0, 'a & !b': 2, 'a & b': 3}, 1: {'!a': 1, 'a': 2}, 2: {'true': 2}, 3: {'!b': 2, 'b': 3}}, 'init_state': 0, 'pref_graph': {'nodes': {0: {'name': 'F(a)'}, 1: {'name': 'G(b)'}, 2: {'name': '!((F(a) | G(b)))'}}, 'edges': {0: [0], 1: [0, 1], 2: [0, 1, 2]}}}}
2024-10-05 20:11:24.938 | INFO     | webapp:cb_btn_translate:635 - Input dictionary: {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'incomparable'}
2024-10-05 20:11:24.939 | DEBUG    | prefltlf2pdfa.prefltlf:parse:111 - Parsing prefltlf formula with auto_complete='incomparable': 
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 20:11:24.963 | DEBUG    | prefltlf2pdfa.prefltlf:_construct_spec_ir:476 - Intermediate representation based on raw input: 
['0:F(a)  >  1:G(b)']
2024-10-05 20:11:24.981 | DEBUG    | prefltlf2pdfa.prefltlf:_auto_complete:503 - Intermediate representation based on raw input: ['0:F(a)  >  1:G(b)']
2024-10-05 20:11:24.981 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:547 - Clauses from intermediate representation:
set_w=set() 
set_p={(0, 1)} 
set_i=set() 
set_j=set()
2024-10-05 20:11:24.982 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:576 - Clauses after applying transitive and reflexive closures:
set_p={(0, 1)} 
set_i={(1, 1), (2, 2), (0, 0)} 
set_j=set()
2024-10-05 20:11:24.982 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:621 - Partial order for input specification:
phi={0: F(a), 1: G(b), 2: !((F(a) | G(b)))}
model={(0, 1), (1, 1), (0, 0), (2, 2)}
model={'(G(b), G(b))', '(F(a), F(a))', '(F(a), G(b))', '(!((F(a) | G(b))), !((F(a) | G(b))))'}
2024-10-05 20:11:24.983 | DEBUG    | prefltlf2pdfa.prefltlf:translate:152 - Translating the formula to preference automaton under semantics=`semantics_mp_forall_exists`:
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 20:11:25.024 | DEBUG    | prefltlf2pdfa.prefltlf:translate:171 - Constructed Automata: {0: F(a), 1: G(b), 2: !((F(a) | G(b)))} 

======== F(a) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'a': 2, '~a': 1}, 2: {'true': 2}}}

======== G(b) ========
{'final_states': {1},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'b': 1, '~b': 2}, 2: {'true': 2}}}

======== !((F(a) | G(b))) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2, 3},
 'transitions': {1: {'a': 3, 'b & ~a': 1, '~a & ~b': 2},
                 2: {'a': 3, '~a': 2},
                 3: {'true': 3}}}

2024-10-05 20:11:25.054 | DEBUG    | prefltlf2pdfa.viz:paut2dot:109 - Options for paut2dot: sa_state=False, sa_class=False, sa_color=False, pg_state=False
2024-10-05 20:11:25.201 | INFO     | webapp:cb_btn_translate:657 - Output dictionary: {'input': {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'incomparable'}, 'formula': {'f_str': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'atoms': ['b', 'a'], 'alphabet': [], 'phi': {0: 'F(a)', 1: 'G(b)', 2: '!((F(a) | G(b)))'}, 'relation': [(0, 1), (1, 1), (0, 0), (2, 2)]}, 'pdfa': {'states': {0: {'name': (1, 1, 1), 'partition': 1}, 1: {'name': (1, 2, 2), 'partition': 2}, 2: {'name': (2, 2, 3), 'partition': 0}, 3: {'name': (2, 1, 3), 'partition': 0}}, 'atoms': {'b', 'a'}, 'alphabet': [], 'transitions': {0: {'!a & !b': 1, 'b & !a': 0, 'a & !b': 2, 'a & b': 3}, 1: {'!a': 1, 'a': 2}, 2: {'true': 2}, 3: {'!b': 2, 'b': 3}}, 'init_state': 0, 'pref_graph': {'nodes': {0: {'name': 'F(a)'}, 1: {'name': 'G(b)'}, 2: {'name': '!((F(a) | G(b)))'}}, 'edges': {0: [0], 1: [0, 1], 2: [2]}}}}
2024-10-05 20:11:31.380 | INFO     | webapp:cb_btn_translate:635 - Input dictionary: {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': True}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'incomparable'}
2024-10-05 20:11:31.382 | DEBUG    | prefltlf2pdfa.prefltlf:parse:111 - Parsing prefltlf formula with auto_complete='incomparable': 
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 20:11:31.410 | DEBUG    | prefltlf2pdfa.prefltlf:_construct_spec_ir:476 - Intermediate representation based on raw input: 
['0:F(a)  >  1:G(b)']
2024-10-05 20:11:31.436 | DEBUG    | prefltlf2pdfa.prefltlf:_auto_complete:503 - Intermediate representation based on raw input: ['0:F(a)  >  1:G(b)']
2024-10-05 20:11:31.437 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:547 - Clauses from intermediate representation:
set_w=set() 
set_p={(0, 1)} 
set_i=set() 
set_j=set()
2024-10-05 20:11:31.437 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:576 - Clauses after applying transitive and reflexive closures:
set_p={(0, 1)} 
set_i={(1, 1), (2, 2), (0, 0)} 
set_j=set()
2024-10-05 20:11:31.438 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:621 - Partial order for input specification:
phi={0: F(a), 1: G(b), 2: !((F(a) | G(b)))}
model={(0, 1), (1, 1), (0, 0), (2, 2)}
model={'(G(b), G(b))', '(F(a), F(a))', '(F(a), G(b))', '(!((F(a) | G(b))), !((F(a) | G(b))))'}
2024-10-05 20:11:31.439 | DEBUG    | prefltlf2pdfa.prefltlf:translate:152 - Translating the formula to preference automaton under semantics=`semantics_mp_forall_exists`:
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 20:11:31.488 | DEBUG    | prefltlf2pdfa.prefltlf:translate:171 - Constructed Automata: {0: F(a), 1: G(b), 2: !((F(a) | G(b)))} 

======== F(a) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'a': 2, '~a': 1}, 2: {'true': 2}}}

======== G(b) ========
{'final_states': {1},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'b': 1, '~b': 2}, 2: {'true': 2}}}

======== !((F(a) | G(b))) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2, 3},
 'transitions': {1: {'a': 3, 'b & ~a': 1, '~a & ~b': 2},
                 2: {'a': 3, '~a': 2},
                 3: {'true': 3}}}

2024-10-05 20:11:31.521 | DEBUG    | prefltlf2pdfa.viz:paut2dot:109 - Options for paut2dot: sa_state=False, sa_class=False, sa_color=False, pg_state=True
2024-10-05 20:11:31.662 | INFO     | webapp:cb_btn_translate:657 - Output dictionary: {'input': {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': True}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'incomparable'}, 'formula': {'f_str': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'atoms': ['b', 'a'], 'alphabet': [], 'phi': {0: 'F(a)', 1: 'G(b)', 2: '!((F(a) | G(b)))'}, 'relation': [(0, 1), (1, 1), (0, 0), (2, 2)]}, 'pdfa': {'states': {0: {'name': (1, 1, 1), 'partition': 1}, 1: {'name': (1, 2, 2), 'partition': 2}, 2: {'name': (2, 2, 3), 'partition': 0}, 3: {'name': (2, 1, 3), 'partition': 0}}, 'atoms': {'b', 'a'}, 'alphabet': [], 'transitions': {0: {'!a & !b': 1, 'b & !a': 0, 'a & !b': 2, 'a & b': 3}, 1: {'!a': 1, 'a': 2}, 2: {'true': 2}, 3: {'!b': 2, 'b': 3}}, 'init_state': 0, 'pref_graph': {'nodes': {0: {'name': 'F(a)'}, 1: {'name': 'G(b)'}, 2: {'name': '!((F(a) | G(b)))'}}, 'edges': {0: [0], 1: [0, 1], 2: [2]}}}}
2024-10-05 20:15:03.226 | INFO     | webapp:cb_btn_translate:635 - Input dictionary: {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'minimal'}
2024-10-05 20:15:03.227 | DEBUG    | prefltlf2pdfa.prefltlf:parse:111 - Parsing prefltlf formula with auto_complete='minimal': 
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 20:15:03.258 | DEBUG    | prefltlf2pdfa.prefltlf:_construct_spec_ir:476 - Intermediate representation based on raw input: 
['0:F(a)  >  1:G(b)']
2024-10-05 20:15:03.281 | DEBUG    | prefltlf2pdfa.prefltlf:_auto_complete:503 - Intermediate representation based on raw input: ['0:F(a)  >  1:G(b)', '0:F(a)  >=  2:!((F(a) | G(b)))', '1:G(b)  >=  2:!((F(a) | G(b)))', '2:!((F(a) | G(b)))  >=  2:!((F(a) | G(b)))']
2024-10-05 20:15:03.282 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:547 - Clauses from intermediate representation:
set_w={(0, 2), (1, 2), (2, 2)} 
set_p={(0, 1)} 
set_i=set() 
set_j=set()
2024-10-05 20:15:03.283 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:576 - Clauses after applying transitive and reflexive closures:
set_p={(0, 1), (0, 2), (1, 2)} 
set_i={(0, 0), (1, 1), (2, 2)} 
set_j=set()
2024-10-05 20:15:03.283 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:621 - Partial order for input specification:
phi={0: F(a), 1: G(b), 2: !((F(a) | G(b)))}
model={(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)}
model={'(G(b), G(b))', '(F(a), G(b))', '(F(a), !((F(a) | G(b))))', '(G(b), !((F(a) | G(b))))', '(F(a), F(a))', '(!((F(a) | G(b))), !((F(a) | G(b))))'}
2024-10-05 20:15:03.284 | DEBUG    | prefltlf2pdfa.prefltlf:translate:152 - Translating the formula to preference automaton under semantics=`semantics_mp_forall_exists`:
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 20:15:03.325 | DEBUG    | prefltlf2pdfa.prefltlf:translate:171 - Constructed Automata: {0: F(a), 1: G(b), 2: !((F(a) | G(b)))} 

======== F(a) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'a': 2, '~a': 1}, 2: {'true': 2}}}

======== G(b) ========
{'final_states': {1},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'b': 1, '~b': 2}, 2: {'true': 2}}}

======== !((F(a) | G(b))) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2, 3},
 'transitions': {1: {'a': 3, 'b & ~a': 1, '~a & ~b': 2},
                 2: {'a': 3, '~a': 2},
                 3: {'true': 3}}}

2024-10-05 20:15:03.359 | DEBUG    | prefltlf2pdfa.viz:paut2dot:109 - Options for paut2dot: sa_state=False, sa_class=False, sa_color=False, pg_state=False
2024-10-05 20:15:03.530 | INFO     | webapp:cb_btn_translate:657 - Output dictionary: {'input': {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'minimal'}, 'formula': {'f_str': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'atoms': ['b', 'a'], 'alphabet': [], 'phi': {0: 'F(a)', 1: 'G(b)', 2: '!((F(a) | G(b)))'}, 'relation': [(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)]}, 'pdfa': {'states': {0: {'name': (1, 1, 1), 'partition': 1}, 1: {'name': (1, 2, 2), 'partition': 2}, 2: {'name': (2, 2, 3), 'partition': 0}, 3: {'name': (2, 1, 3), 'partition': 0}}, 'atoms': {'b', 'a'}, 'alphabet': [], 'transitions': {0: {'a & !b': 2, '!a & !b': 1, 'a & b': 3, 'b & !a': 0}, 1: {'a': 2, '!a': 1}, 2: {'true': 2}, 3: {'b': 3, '!b': 2}}, 'init_state': 0, 'pref_graph': {'nodes': {0: {'name': 'F(a)'}, 1: {'name': 'G(b)'}, 2: {'name': '!((F(a) | G(b)))'}}, 'edges': {0: [0], 1: [0, 1], 2: [0, 1, 2]}}}}
2024-10-05 20:15:03.531 | ERROR    | webapp:cb_btn_translate:676 - Object of type set is not JSON serializable
Traceback (most recent call last):

  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 995, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7f701d6b0860>
    └ <Thread(Thread-10 (process_request_thread), started daemon 140117718099712)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 1038, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7f701d6b0540>
    └ <Thread(Thread-10 (process_request_thread), started daemon 140117718099712)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 975, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-10 (process_request_thread), started daemon 140117718099712)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53328)>, ('127.0.0.1', 53328))
    │    │        └ <Thread(Thread-10 (process_request_thread), started daemon 140117718099712)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7f6fb3ba0150>>
    └ <Thread(Thread-10 (process_request_thread), started daemon 140117718099712)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 691, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 53328)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53328)>
    │    └ <function BaseServer.finish_request at 0x7f6fbb8b2980>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f6fb3ba0150>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 361, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f6fb3ba0150>
    │    │                   │        └ ('127.0.0.1', 53328)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53328)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f6fb3ba0150>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 755, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7f6fbb523d80>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f6fb40b54d0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7f6fbb44c9a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f6fb40b54d0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7f6fb40b54d0>>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'webapp'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f6fb3ba0150>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7f6fb40b54d0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7f6fb3744860>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f6fb3685940>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f6fb3685940>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7f6fbafb9760>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7f6fbafb8ea0>
               └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7f6fbafb8e00>
         └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/_dash-update-component'
           │    │           │    │              └ <Rule '/_dash-update-component' (POST, OPTIONS) -> /_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7f6fb3685da0>, '_dash_assets.static': <bound method Blueprint.send...
           │    │           └ <Flask 'webapp'>
           │    └ <function Flask.ensure_sync at 0x7f6fbafb9080>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/dash.py", line 1373, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7f6fb374aa00>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/_callback.py", line 465, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)
                   │                │      │            └ {}
                   │                │      └ [None, 1, 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', None, None,...
                   │                └ <function cb_btn_translate at 0x7f6fb3687880>
                   └ <function _invoke_callback at 0x7f6fbad61f80>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/_callback.py", line 40, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (None, 1, 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', None, None,...
           └ <function cb_btn_translate at 0x7f6fb3687880>

> File "/mnt/e/OneDrive - The University of Texas at Austin/4- Ongoing Research/4- Preference-based Planning/0-Code/prefltlf2pdfa-webapp/webapp.py", line 669, in cb_btn_translate
    dict(content=f"{json.dumps(output_dict, indent=2)}", filename="hello.json")

  File "/home/abhibp1993/miniconda3/lib/python3.11/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
      │          └ {'input': {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'a...
      └ {}
  File "/home/abhibp1993/miniconda3/lib/python3.11/json/encoder.py", line 202, in encode
    chunks = list(chunks)
                  └ <generator object _make_iterencode.<locals>._iterencode at 0x7f6fb38118b0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/json/encoder.py", line 432, in _iterencode
    yield from _iterencode_dict(o, _current_indent_level)
               │                │  └ 0
               │                └ {'input': {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'a...
               └ <function _make_iterencode.<locals>._iterencode_dict at 0x7f6fb35dc9a0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/json/encoder.py", line 406, in _iterencode_dict
    yield from chunks
               └ <generator object _make_iterencode.<locals>._iterencode_dict at 0x7f6fb3821090>
  File "/home/abhibp1993/miniconda3/lib/python3.11/json/encoder.py", line 406, in _iterencode_dict
    yield from chunks
               └ <generator object _make_iterencode.<locals>._iterencode at 0x7f6fb3811b90>
  File "/home/abhibp1993/miniconda3/lib/python3.11/json/encoder.py", line 439, in _iterencode
    o = _default(o)
        │        └ {'b', 'a'}
        └ <bound method JSONEncoder.default of <json.encoder.JSONEncoder object at 0x7f6fb3f8d650>>
  File "/home/abhibp1993/miniconda3/lib/python3.11/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '

TypeError: Object of type set is not JSON serializable
2024-10-05 20:21:26.844 | INFO     | webapp:cb_btn_translate:635 - Input dictionary: {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'minimal'}
2024-10-05 20:21:26.846 | DEBUG    | prefltlf2pdfa.prefltlf:parse:111 - Parsing prefltlf formula with auto_complete='minimal': 
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 20:21:26.873 | DEBUG    | prefltlf2pdfa.prefltlf:_construct_spec_ir:476 - Intermediate representation based on raw input: 
['0:F(a)  >  1:G(b)']
2024-10-05 20:21:26.891 | DEBUG    | prefltlf2pdfa.prefltlf:_auto_complete:503 - Intermediate representation based on raw input: ['0:F(a)  >  1:G(b)', '0:F(a)  >=  2:!((F(a) | G(b)))', '1:G(b)  >=  2:!((F(a) | G(b)))', '2:!((F(a) | G(b)))  >=  2:!((F(a) | G(b)))']
2024-10-05 20:21:26.892 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:547 - Clauses from intermediate representation:
set_w={(0, 2), (1, 2), (2, 2)} 
set_p={(0, 1)} 
set_i=set() 
set_j=set()
2024-10-05 20:21:26.893 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:576 - Clauses after applying transitive and reflexive closures:
set_p={(0, 1), (0, 2), (1, 2)} 
set_i={(0, 0), (1, 1), (2, 2)} 
set_j=set()
2024-10-05 20:21:26.894 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:621 - Partial order for input specification:
phi={0: F(a), 1: G(b), 2: !((F(a) | G(b)))}
model={(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)}
model={'(G(b), G(b))', '(F(a), G(b))', '(F(a), !((F(a) | G(b))))', '(G(b), !((F(a) | G(b))))', '(F(a), F(a))', '(!((F(a) | G(b))), !((F(a) | G(b))))'}
2024-10-05 20:21:26.895 | DEBUG    | prefltlf2pdfa.prefltlf:translate:152 - Translating the formula to preference automaton under semantics=`semantics_mp_forall_exists`:
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 20:21:26.942 | DEBUG    | prefltlf2pdfa.prefltlf:translate:171 - Constructed Automata: {0: F(a), 1: G(b), 2: !((F(a) | G(b)))} 

======== F(a) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'a': 2, '~a': 1}, 2: {'true': 2}}}

======== G(b) ========
{'final_states': {1},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'b': 1, '~b': 2}, 2: {'true': 2}}}

======== !((F(a) | G(b))) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2, 3},
 'transitions': {1: {'a': 3, 'b & ~a': 1, '~a & ~b': 2},
                 2: {'a': 3, '~a': 2},
                 3: {'true': 3}}}

2024-10-05 20:21:26.972 | DEBUG    | prefltlf2pdfa.viz:paut2dot:109 - Options for paut2dot: sa_state=False, sa_class=False, sa_color=False, pg_state=False
2024-10-05 20:21:27.125 | INFO     | webapp:cb_btn_translate:657 - Output dictionary: {'input': {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'minimal'}, 'formula': {'f_str': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'atoms': ['b', 'a'], 'alphabet': [], 'phi': {0: 'F(a)', 1: 'G(b)', 2: '!((F(a) | G(b)))'}, 'relation': [(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)]}, 'pdfa': {'states': {0: {'name': (1, 1, 1), 'partition': 1}, 1: {'name': (1, 2, 2), 'partition': 2}, 2: {'name': (2, 2, 3), 'partition': 0}, 3: {'name': (2, 1, 3), 'partition': 0}}, 'atoms': {'b', 'a'}, 'alphabet': [], 'transitions': {0: {'a & !b': 2, '!a & !b': 1, 'a & b': 3, 'b & !a': 0}, 1: {'a': 2, '!a': 1}, 2: {'true': 2}, 3: {'b': 3, '!b': 2}}, 'init_state': 0, 'pref_graph': {'nodes': {0: {'name': 'F(a)'}, 1: {'name': 'G(b)'}, 2: {'name': '!((F(a) | G(b)))'}}, 'edges': {0: [0], 1: [0, 1], 2: [0, 1, 2]}}}}
2024-10-05 20:21:27.126 | ERROR    | webapp:cb_btn_translate:676 - Object of type set is not JSON serializable
Traceback (most recent call last):

  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 995, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7f701d6b0860>
    └ <Thread(Thread-20 (process_request_thread), started daemon 140117718099712)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 1038, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7f701d6b0540>
    └ <Thread(Thread-20 (process_request_thread), started daemon 140117718099712)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 975, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-20 (process_request_thread), started daemon 140117718099712)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53330)>, ('127.0.0.1', 53330))
    │    │        └ <Thread(Thread-20 (process_request_thread), started daemon 140117718099712)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7f6fb3ba0150>>
    └ <Thread(Thread-20 (process_request_thread), started daemon 140117718099712)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 691, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 53330)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53330)>
    │    └ <function BaseServer.finish_request at 0x7f6fbb8b2980>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f6fb3ba0150>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 361, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f6fb3ba0150>
    │    │                   │        └ ('127.0.0.1', 53330)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53330)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f6fb3ba0150>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 755, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7f6fbb523d80>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f6fb35c1450>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7f6fbb44c9a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f6fb35c1450>
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7f6fb35c1450>>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'webapp'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f6fb3ba0150>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7f6fb35c1450>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7f6fb35d7880>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f6fb35d7ec0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f6fb35d7ec0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7f6fbafb9760>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7f6fbafb8ea0>
               └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7f6fbafb8e00>
         └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/_dash-update-component'
           │    │           │    │              └ <Rule '/_dash-update-component' (POST, OPTIONS) -> /_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7f6fb3685da0>, '_dash_assets.static': <bound method Blueprint.send...
           │    │           └ <Flask 'webapp'>
           │    └ <function Flask.ensure_sync at 0x7f6fbafb9080>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/dash.py", line 1373, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7f6fb35b9b80>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/_callback.py", line 465, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)
                   │                │      │            └ {}
                   │                │      └ [None, 2, 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', None, None,...
                   │                └ <function cb_btn_translate at 0x7f6fb3687880>
                   └ <function _invoke_callback at 0x7f6fbad61f80>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/_callback.py", line 40, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (None, 2, 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', None, None,...
           └ <function cb_btn_translate at 0x7f6fb3687880>

> File "/mnt/e/OneDrive - The University of Texas at Austin/4- Ongoing Research/4- Preference-based Planning/0-Code/prefltlf2pdfa-webapp/webapp.py", line 669, in cb_btn_translate
    dict(content=f"{json.dumps(output_dict, indent=2)}", filename="hello.json")

  File "/home/abhibp1993/miniconda3/lib/python3.11/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
      │          └ {'input': {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'a...
      └ {}
  File "/home/abhibp1993/miniconda3/lib/python3.11/json/encoder.py", line 202, in encode
    chunks = list(chunks)
                  └ <generator object _make_iterencode.<locals>._iterencode at 0x7f6fb3811d00>
  File "/home/abhibp1993/miniconda3/lib/python3.11/json/encoder.py", line 432, in _iterencode
    yield from _iterencode_dict(o, _current_indent_level)
               │                │  └ 0
               │                └ {'input': {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'a...
               └ <function _make_iterencode.<locals>._iterencode_dict at 0x7f701aa184a0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/json/encoder.py", line 406, in _iterencode_dict
    yield from chunks
               └ <generator object _make_iterencode.<locals>._iterencode_dict at 0x7f6fb3821260>
  File "/home/abhibp1993/miniconda3/lib/python3.11/json/encoder.py", line 406, in _iterencode_dict
    yield from chunks
               └ <generator object _make_iterencode.<locals>._iterencode at 0x7f6fb3811fe0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/json/encoder.py", line 439, in _iterencode
    o = _default(o)
        │        └ {'b', 'a'}
        └ <bound method JSONEncoder.default of <json.encoder.JSONEncoder object at 0x7f701aa10b10>>
  File "/home/abhibp1993/miniconda3/lib/python3.11/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '

TypeError: Object of type set is not JSON serializable
2024-10-05 20:22:22.888 | INFO     | webapp:cb_btn_translate:635 - Input dictionary: {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'minimal'}
2024-10-05 20:22:22.890 | DEBUG    | prefltlf2pdfa.prefltlf:parse:111 - Parsing prefltlf formula with auto_complete='minimal': 
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 20:22:22.922 | INFO     | webapp:cb_btn_translate:635 - Input dictionary: {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'minimal'}
2024-10-05 20:22:22.934 | DEBUG    | prefltlf2pdfa.prefltlf:parse:111 - Parsing prefltlf formula with auto_complete='minimal': 
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 20:22:22.963 | DEBUG    | prefltlf2pdfa.prefltlf:_construct_spec_ir:476 - Intermediate representation based on raw input: 
['0:F(a)  >  1:G(b)']
2024-10-05 20:22:23.006 | DEBUG    | prefltlf2pdfa.prefltlf:_auto_complete:503 - Intermediate representation based on raw input: ['0:F(a)  >  1:G(b)', '0:F(a)  >=  2:!((F(a) | G(b)))', '1:G(b)  >=  2:!((F(a) | G(b)))', '2:!((F(a) | G(b)))  >=  2:!((F(a) | G(b)))']
2024-10-05 20:22:23.008 | DEBUG    | prefltlf2pdfa.prefltlf:_construct_spec_ir:476 - Intermediate representation based on raw input: 
['0:F(a)  >  1:G(b)']
2024-10-05 20:22:23.009 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:547 - Clauses from intermediate representation:
set_w={(0, 2), (1, 2), (2, 2)} 
set_p={(0, 1)} 
set_i=set() 
set_j=set()
2024-10-05 20:22:23.012 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:576 - Clauses after applying transitive and reflexive closures:
set_p={(0, 1), (0, 2), (1, 2)} 
set_i={(0, 0), (1, 1), (2, 2)} 
set_j=set()
2024-10-05 20:22:23.015 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:621 - Partial order for input specification:
phi={0: F(a), 1: G(b), 2: !((F(a) | G(b)))}
model={(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)}
model={'(G(b), G(b))', '(F(a), !((F(a) | G(b))))', '(F(a), F(a))', '(F(a), G(b))', '(!((F(a) | G(b))), !((F(a) | G(b))))', '(G(b), !((F(a) | G(b))))'}
2024-10-05 20:22:23.020 | DEBUG    | prefltlf2pdfa.prefltlf:translate:152 - Translating the formula to preference automaton under semantics=`semantics_mp_forall_exists`:
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 20:22:23.033 | DEBUG    | prefltlf2pdfa.prefltlf:_auto_complete:503 - Intermediate representation based on raw input: ['0:F(a)  >  1:G(b)', '0:F(a)  >=  2:!((F(a) | G(b)))', '1:G(b)  >=  2:!((F(a) | G(b)))', '2:!((F(a) | G(b)))  >=  2:!((F(a) | G(b)))']
2024-10-05 20:22:23.033 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:547 - Clauses from intermediate representation:
set_w={(0, 2), (1, 2), (2, 2)} 
set_p={(0, 1)} 
set_i=set() 
set_j=set()
2024-10-05 20:22:23.036 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:576 - Clauses after applying transitive and reflexive closures:
set_p={(0, 1), (0, 2), (1, 2)} 
set_i={(0, 0), (1, 1), (2, 2)} 
set_j=set()
2024-10-05 20:22:23.039 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:621 - Partial order for input specification:
phi={0: F(a), 1: G(b), 2: !((F(a) | G(b)))}
model={(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)}
model={'(G(b), G(b))', '(F(a), !((F(a) | G(b))))', '(F(a), F(a))', '(F(a), G(b))', '(!((F(a) | G(b))), !((F(a) | G(b))))', '(G(b), !((F(a) | G(b))))'}
2024-10-05 20:22:23.040 | DEBUG    | prefltlf2pdfa.prefltlf:translate:152 - Translating the formula to preference automaton under semantics=`semantics_mp_forall_exists`:
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 20:22:23.072 | DEBUG    | prefltlf2pdfa.prefltlf:translate:171 - Constructed Automata: {0: F(a), 1: G(b), 2: !((F(a) | G(b)))} 

======== F(a) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'a': 2, '~a': 1}, 2: {'true': 2}}}

======== G(b) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'a': 2, '~a': 1}, 2: {'true': 2}}}

======== !((F(a) | G(b))) ========
{'final_states': {0},
 'init_state': 1,
 'states': {0, 1},
 'transitions': {0: {}, 1: {}}}

2024-10-05 20:22:23.135 | DEBUG    | prefltlf2pdfa.prefltlf:translate:171 - Constructed Automata: {0: F(a), 1: G(b), 2: !((F(a) | G(b)))} 

======== F(a) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'a': 2, '~a': 1}, 2: {'true': 2}}}

======== G(b) ========
{'final_states': {0},
 'init_state': 1,
 'states': {0, 1},
 'transitions': {0: {}, 1: {}}}

======== !((F(a) | G(b))) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2, 3},
 'transitions': {1: {'a': 3, 'b & ~a': 1, '~a & ~b': 2},
                 2: {'a': 3, '~a': 2},
                 3: {'true': 3}}}

2024-10-05 20:22:23.085 | ERROR    | webapp:cb_btn_translate:676 - Unexpected token Token('RSEPARATOR', ')') at line 1, column 2.
Expected one of: 
	* ALWAYS
	* NEXT
	* LAST
	* NOT
	* WEAK_NEXT
	* LSEPARATOR
	* SYMBOL_NAME
	* EVENTUALLY
Previous tokens: [Token('LSEPARATOR', '(')]

Traceback (most recent call last):

  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/lark/lexer.py", line 478, in lex
    yield lexer.next_token(lexer_state, parser_state)
          │     │          │            └ <lark.parsers.lalr_parser.ParserState object at 0x7f9d35ebc7c0>
          │     │          └ <lark.lexer.LexerState object at 0x7f9d35ebd780>
          │     └ <function TraditionalLexer.next_token at 0x7f9cc00ff420>
          └ <lark.lexer.TraditionalLexer object at 0x7f9cbed54250>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/lark/lexer.py", line 398, in next_token
    raise UnexpectedCharacters(lex_state.text, line_ctr.char_pos, line_ctr.line, line_ctr.column,
          │                    │         │     │        │         │        │     │        └ <member 'column' of 'LineCounter' objects>
          │                    │         │     │        │         │        │     └ <lark.lexer.LineCounter object at 0x7f9d35ed1030>
          │                    │         │     │        │         │        └ <member 'line' of 'LineCounter' objects>
          │                    │         │     │        │         └ <lark.lexer.LineCounter object at 0x7f9d35ed1030>
          │                    │         │     │        └ <member 'char_pos' of 'LineCounter' objects>
          │                    │         │     └ <lark.lexer.LineCounter object at 0x7f9d35ed1030>
          │                    │         └ <member 'text' of 'LexerState' objects>
          │                    └ <lark.lexer.LexerState object at 0x7f9d35ebd780>
          └ <class 'lark.exceptions.UnexpectedCharacters'>

lark.exceptions.UnexpectedCharacters: No terminal matches ')' in the current parser context, at line 1 col 2

()
 ^
Expected one of: 
	* ALWAYS
	* NEXT
	* LAST
	* NOT
	* WEAK_NEXT
	* pl__TRUE
	* LSEPARATOR
	* SYMBOL_NAME
	* pl__FALSE
	* EVENTUALLY

Previous tokens: Token('LSEPARATOR', '(')



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "/home/abhibp1993/.pycharm_helpers/pydev/_pydev_bundle/pydev_monkey.py", line 805, in __call__
    ret = self.original_func(*self.args, **self.kwargs)
          │    │              │    │       │    └ {}
          │    │              │    │       └ <_pydev_bundle.pydev_monkey._NewThreadStartupWithTrace object at 0x7f9cbe4cf590>
          │    │              │    └ ()
          │    │              └ <_pydev_bundle.pydev_monkey._NewThreadStartupWithTrace object at 0x7f9cbe4cf590>
          │    └ <bound method Thread._bootstrap of <Thread(Thread-6 (process_request_thread), started daemon 140311175165696)>>
          └ <_pydev_bundle.pydev_monkey._NewThreadStartupWithTrace object at 0x7f9cbe4cf590>

  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 995, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7f9d38ba0860>
    └ <Thread(Thread-6 (process_request_thread), started daemon 140311175165696)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 1038, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7f9d38ba0540>
    └ <Thread(Thread-6 (process_request_thread), started daemon 140311175165696)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 975, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-6 (process_request_thread), started daemon 140311175165696)>
    │    │        │    └ (<socket.socket fd=8, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53336)>, ('127.0.0.1', 53336))
    │    │        └ <Thread(Thread-6 (process_request_thread), started daemon 140311175165696)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7f9cbe4747d0>>
    └ <Thread(Thread-6 (process_request_thread), started daemon 140311175165696)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 691, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 53336)
    │    │              └ <socket.socket fd=8, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53336)>
    │    └ <function BaseServer.finish_request at 0x7f9cd69ae980>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f9cbe4747d0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 361, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f9cbe4747d0>
    │    │                   │        └ ('127.0.0.1', 53336)
    │    │                   └ <socket.socket fd=8, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53336)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f9cbe4747d0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 755, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7f9cd24f3880>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f9cbe4cf710>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7f9cd69e0a40>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f9cbe4cf710>
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7f9cbe4cf710>>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'webapp'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f9cbe4747d0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7f9cbe4cf710>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7f9cbe423e20>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f9cbe423d80>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f9cbe423d80>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=8>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7f9cd1f859e0>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7f9cd1f85120>
               └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7f9cd1f85080>
         └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/_dash-update-component'
           │    │           │    │              └ <Rule '/_dash-update-component' (OPTIONS, POST) -> /_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7f9cd1b32ac0>, '_dash_assets.static': <bound method Blueprint.send...
           │    │           └ <Flask 'webapp'>
           │    └ <function Flask.ensure_sync at 0x7f9cd1f85300>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/dash.py", line 1373, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7f9cbe4de200>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/_callback.py", line 465, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)
                   │                │      │            └ {}
                   │                │      └ [None, 4, 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', None, None,...
                   │                └ <function cb_btn_translate at 0x7f9cbe420540>
                   └ <function _invoke_callback at 0x7f9cd1d4a340>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/_callback.py", line 40, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (None, 4, 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', None, None,...
           └ <function cb_btn_translate at 0x7f9cbe420540>

> File "/mnt/e/OneDrive - The University of Texas at Austin/4- Ongoing Research/4- Preference-based Planning/0-Code/prefltlf2pdfa-webapp/webapp.py", line 644, in cb_btn_translate
    phi, pdfa = translate_to_pdfa(input_dict)
                │                 └ {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': ...
                └ <function translate_to_pdfa at 0x7f9cbe5ae700>

  File "/mnt/e/OneDrive - The University of Texas at Austin/4- Ongoing Research/4- Preference-based Planning/0-Code/prefltlf2pdfa-webapp/webapp.py", line 492, in translate_to_pdfa
    pdfa = phi.translate(semantics=semantics)
           │   │                   └ <function semantics_mp_forall_exists at 0x7f9cbe5600e0>
           │   └ <function PrefLTLf.translate at 0x7f9cbe5959e0>
           └ <PrefLTLf Formula at 140311183791440>

  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/prefltlf.py", line 177, in translate
    self._construct_preference_graph(aut, semantics, show_progress=show_progress)
    │    │                           │    │                        └ False
    │    │                           │    └ <function semantics_mp_forall_exists at 0x7f9cbe5600e0>
    │    │                           └ <prefltlf2pdfa.prefltlf.PrefAutomaton object at 0x7f9cbf16bc10>
    │    └ <function PrefLTLf._construct_preference_graph at 0x7f9cbe5951c0>
    └ <PrefLTLf Formula at 140311183791440>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/prefltlf.py", line 402, in _construct_preference_graph
    cls_name = str(PARSER(cls_name))
                   │      └ '()'
                   └ <ltlf2dfa.parser.ltlf.LTLfParser object at 0x7f9cc02db510>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/ltlf2dfa/parser/ltlf.py", line 223, in __call__
    tree = self._parser.parse(text)
           │    │       │     └ '()'
           │    │       └ <function Lark.parse at 0x7f9cc01b6480>
           │    └ Lark(open('/home/abhibp1993/miniconda3/lib/python3.11/site-packages/ltlf2dfa/parser/ltlf.lark'), parser='lalr', lexer='contex...
           └ <ltlf2dfa.parser.ltlf.LTLfParser object at 0x7f9cc02db510>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/lark/lark.py", line 581, in parse
    return self.parser.parse(text, start=start, on_error=on_error)
           │    │      │     │           │               └ None
           │    │      │     │           └ None
           │    │      │     └ '()'
           │    │      └ <function ParsingFrontend.parse at 0x7f9cc01ad4e0>
           │    └ <lark.parser_frontends.ParsingFrontend object at 0x7f9cbf256610>
           └ Lark(open('/home/abhibp1993/miniconda3/lib/python3.11/site-packages/ltlf2dfa/parser/ltlf.lark'), parser='lalr', lexer='contex...
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/lark/parser_frontends.py", line 106, in parse
    return self.parser.parse(stream, chosen_start, **kw)
           │    │      │     │       │               └ {}
           │    │      │     │       └ 'start'
           │    │      │     └ <lark.lexer.LexerThread object at 0x7f9d35ebdb10>
           │    │      └ <function LALR_Parser.parse at 0x7f9cc01ac7c0>
           │    └ <lark.parsers.lalr_parser.LALR_Parser object at 0x7f9cbecfea50>
           └ <lark.parser_frontends.ParsingFrontend object at 0x7f9cbf256610>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/lark/parsers/lalr_parser.py", line 41, in parse
    return self.parser.parse(lexer, start)
           │    │      │     │      └ 'start'
           │    │      │     └ <lark.lexer.LexerThread object at 0x7f9d35ebdb10>
           │    │      └ <function _Parser.parse at 0x7f9cc01acd60>
           │    └ <lark.parsers.lalr_parser._Parser object at 0x7f9cbe5b6fd0>
           └ <lark.parsers.lalr_parser.LALR_Parser object at 0x7f9cbecfea50>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/lark/parsers/lalr_parser.py", line 171, in parse
    return self.parse_from_state(parser_state)
           │    │                └ <lark.parsers.lalr_parser.ParserState object at 0x7f9d35ebc7c0>
           │    └ <function _Parser.parse_from_state at 0x7f9cc01ace00>
           └ <lark.parsers.lalr_parser._Parser object at 0x7f9cbe5b6fd0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/lark/parsers/lalr_parser.py", line 188, in parse_from_state
    raise e
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/lark/parsers/lalr_parser.py", line 178, in parse_from_state
    for token in state.lexer.lex(state):
        │        │     │         └ <lark.parsers.lalr_parser.ParserState object at 0x7f9d35ebc7c0>
        │        │     └ <member 'lexer' of 'ParserState' objects>
        │        └ <lark.parsers.lalr_parser.ParserState object at 0x7f9d35ebc7c0>
        └ Token('LSEPARATOR', '(')
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/lark/lexer.py", line 487, in lex
    raise UnexpectedToken(token, e.allowed, state=parser_state, token_history=[last_token], terminals_by_name=self.root_lexer.terminals_by_name)
          │               │                       │                            │                              │    │          └ {'LSEPARATOR': TerminalDef('LSEPARATOR', '\\('), 'RSEPARATOR': TerminalDef('RSEPARATOR', '\\)'), 'EQUIVALENCE': TerminalDef('...
          │               │                       │                            │                              │    └ <lark.lexer.TraditionalLexer object at 0x7f9cbf2f0890>
          │               │                       │                            │                              └ <lark.lexer.ContextualLexer object at 0x7f9cbe584190>
          │               │                       │                            └ Token('LSEPARATOR', '(')
          │               │                       └ <lark.parsers.lalr_parser.ParserState object at 0x7f9d35ebc7c0>
          │               └ Token('RSEPARATOR', ')')
          └ <class 'lark.exceptions.UnexpectedToken'>

lark.exceptions.UnexpectedToken: Unexpected token Token('RSEPARATOR', ')') at line 1, column 2.
Expected one of: 
	* ALWAYS
	* NEXT
	* LAST
	* NOT
	* WEAK_NEXT
	* LSEPARATOR
	* SYMBOL_NAME
	* EVENTUALLY
Previous tokens: [Token('LSEPARATOR', '(')]

2024-10-05 20:22:23.137 | ERROR    | webapp:cb_btn_translate:676 - Unexpected token Token('RSEPARATOR', ')') at line 1, column 2.
Expected one of: 
	* ALWAYS
	* NEXT
	* LAST
	* NOT
	* WEAK_NEXT
	* LSEPARATOR
	* SYMBOL_NAME
	* EVENTUALLY
Previous tokens: [Token('LSEPARATOR', '(')]

Traceback (most recent call last):

  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/lark/lexer.py", line 478, in lex
    yield lexer.next_token(lexer_state, parser_state)
          │     │          │            └ <lark.parsers.lalr_parser.ParserState object at 0x7f9d35ec5fc0>
          │     │          └ <lark.lexer.LexerState object at 0x7f9d35ec5a80>
          │     └ <function TraditionalLexer.next_token at 0x7f9cc00ff420>
          └ <lark.lexer.TraditionalLexer object at 0x7f9cbed54250>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/lark/lexer.py", line 398, in next_token
    raise UnexpectedCharacters(lex_state.text, line_ctr.char_pos, line_ctr.line, line_ctr.column,
          │                    │         │     │        │         │        │     │        └ <member 'column' of 'LineCounter' objects>
          │                    │         │     │        │         │        │     └ <lark.lexer.LineCounter object at 0x7f9d35ee8950>
          │                    │         │     │        │         │        └ <member 'line' of 'LineCounter' objects>
          │                    │         │     │        │         └ <lark.lexer.LineCounter object at 0x7f9d35ee8950>
          │                    │         │     │        └ <member 'char_pos' of 'LineCounter' objects>
          │                    │         │     └ <lark.lexer.LineCounter object at 0x7f9d35ee8950>
          │                    │         └ <member 'text' of 'LexerState' objects>
          │                    └ <lark.lexer.LexerState object at 0x7f9d35ec5a80>
          └ <class 'lark.exceptions.UnexpectedCharacters'>

lark.exceptions.UnexpectedCharacters: No terminal matches ')' in the current parser context, at line 1 col 2

()
 ^
Expected one of: 
	* ALWAYS
	* NEXT
	* LAST
	* NOT
	* WEAK_NEXT
	* pl__TRUE
	* LSEPARATOR
	* SYMBOL_NAME
	* pl__FALSE
	* EVENTUALLY

Previous tokens: Token('LSEPARATOR', '(')



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "/home/abhibp1993/.pycharm_helpers/pydev/_pydev_bundle/pydev_monkey.py", line 805, in __call__
    ret = self.original_func(*self.args, **self.kwargs)
          │    │              │    │       │    └ {}
          │    │              │    │       └ <_pydev_bundle.pydev_monkey._NewThreadStartupWithTrace object at 0x7f9cbe4be1d0>
          │    │              │    └ ()
          │    │              └ <_pydev_bundle.pydev_monkey._NewThreadStartupWithTrace object at 0x7f9cbe4be1d0>
          │    └ <bound method Thread._bootstrap of <Thread(Thread-5 (process_request_thread), started daemon 140311183558400)>>
          └ <_pydev_bundle.pydev_monkey._NewThreadStartupWithTrace object at 0x7f9cbe4be1d0>

  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 995, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7f9d38ba0860>
    └ <Thread(Thread-5 (process_request_thread), started daemon 140311183558400)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 1038, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7f9d38ba0540>
    └ <Thread(Thread-5 (process_request_thread), started daemon 140311183558400)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 975, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-5 (process_request_thread), started daemon 140311183558400)>
    │    │        │    └ (<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53334)>, ('127.0.0.1', 53334))
    │    │        └ <Thread(Thread-5 (process_request_thread), started daemon 140311183558400)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7f9cbe4747d0>>
    └ <Thread(Thread-5 (process_request_thread), started daemon 140311183558400)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 691, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 53334)
    │    │              └ <socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53334)>
    │    └ <function BaseServer.finish_request at 0x7f9cd69ae980>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f9cbe4747d0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 361, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f9cbe4747d0>
    │    │                   │        └ ('127.0.0.1', 53334)
    │    │                   └ <socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53334)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f9cbe4747d0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 755, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7f9cd24f3880>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f9cbe49ea90>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7f9cd69e0a40>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f9cbe49ea90>
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7f9cbe49ea90>>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'webapp'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f9cbe4747d0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7f9cbe49ea90>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7f9cbe4237e0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f9cbe423740>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=6>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f9cbe423740>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=6>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7f9cd1f859e0>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7f9cd1f85120>
               └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7f9cd1f85080>
         └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/_dash-update-component'
           │    │           │    │              └ <Rule '/_dash-update-component' (OPTIONS, POST) -> /_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7f9cd1b32ac0>, '_dash_assets.static': <bound method Blueprint.send...
           │    │           └ <Flask 'webapp'>
           │    └ <function Flask.ensure_sync at 0x7f9cd1f85300>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/dash.py", line 1373, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7f9cbe50f080>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/_callback.py", line 465, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)
                   │                │      │            └ {}
                   │                │      └ [None, 3, 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', None, None,...
                   │                └ <function cb_btn_translate at 0x7f9cbe420540>
                   └ <function _invoke_callback at 0x7f9cd1d4a340>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/_callback.py", line 40, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (None, 3, 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', None, None,...
           └ <function cb_btn_translate at 0x7f9cbe420540>

> File "/mnt/e/OneDrive - The University of Texas at Austin/4- Ongoing Research/4- Preference-based Planning/0-Code/prefltlf2pdfa-webapp/webapp.py", line 644, in cb_btn_translate
    phi, pdfa = translate_to_pdfa(input_dict)
                │                 └ {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': ...
                └ <function translate_to_pdfa at 0x7f9cbe5ae700>

  File "/mnt/e/OneDrive - The University of Texas at Austin/4- Ongoing Research/4- Preference-based Planning/0-Code/prefltlf2pdfa-webapp/webapp.py", line 492, in translate_to_pdfa
    pdfa = phi.translate(semantics=semantics)
           │   │                   └ <function semantics_mp_forall_exists at 0x7f9cbe5600e0>
           │   └ <function PrefLTLf.translate at 0x7f9cbe5959e0>
           └ <PrefLTLf Formula at 140311184601808>

  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/prefltlf.py", line 177, in translate
    self._construct_preference_graph(aut, semantics, show_progress=show_progress)
    │    │                           │    │                        └ False
    │    │                           │    └ <function semantics_mp_forall_exists at 0x7f9cbe5600e0>
    │    │                           └ <prefltlf2pdfa.prefltlf.PrefAutomaton object at 0x7f9cbed540d0>
    │    └ <function PrefLTLf._construct_preference_graph at 0x7f9cbe5951c0>
    └ <PrefLTLf Formula at 140311184601808>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/prefltlf.py", line 402, in _construct_preference_graph
    cls_name = str(PARSER(cls_name))
                   │      └ '()'
                   └ <ltlf2dfa.parser.ltlf.LTLfParser object at 0x7f9cc02db510>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/ltlf2dfa/parser/ltlf.py", line 223, in __call__
    tree = self._parser.parse(text)
           │    │       │     └ '()'
           │    │       └ <function Lark.parse at 0x7f9cc01b6480>
           │    └ Lark(open('/home/abhibp1993/miniconda3/lib/python3.11/site-packages/ltlf2dfa/parser/ltlf.lark'), parser='lalr', lexer='contex...
           └ <ltlf2dfa.parser.ltlf.LTLfParser object at 0x7f9cc02db510>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/lark/lark.py", line 581, in parse
    return self.parser.parse(text, start=start, on_error=on_error)
           │    │      │     │           │               └ None
           │    │      │     │           └ None
           │    │      │     └ '()'
           │    │      └ <function ParsingFrontend.parse at 0x7f9cc01ad4e0>
           │    └ <lark.parser_frontends.ParsingFrontend object at 0x7f9cbf256610>
           └ Lark(open('/home/abhibp1993/miniconda3/lib/python3.11/site-packages/ltlf2dfa/parser/ltlf.lark'), parser='lalr', lexer='contex...
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/lark/parser_frontends.py", line 106, in parse
    return self.parser.parse(stream, chosen_start, **kw)
           │    │      │     │       │               └ {}
           │    │      │     │       └ 'start'
           │    │      │     └ <lark.lexer.LexerThread object at 0x7f9d35ec5910>
           │    │      └ <function LALR_Parser.parse at 0x7f9cc01ac7c0>
           │    └ <lark.parsers.lalr_parser.LALR_Parser object at 0x7f9cbecfea50>
           └ <lark.parser_frontends.ParsingFrontend object at 0x7f9cbf256610>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/lark/parsers/lalr_parser.py", line 41, in parse
    return self.parser.parse(lexer, start)
           │    │      │     │      └ 'start'
           │    │      │     └ <lark.lexer.LexerThread object at 0x7f9d35ec5910>
           │    │      └ <function _Parser.parse at 0x7f9cc01acd60>
           │    └ <lark.parsers.lalr_parser._Parser object at 0x7f9cbe5b6fd0>
           └ <lark.parsers.lalr_parser.LALR_Parser object at 0x7f9cbecfea50>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/lark/parsers/lalr_parser.py", line 171, in parse
    return self.parse_from_state(parser_state)
           │    │                └ <lark.parsers.lalr_parser.ParserState object at 0x7f9d35ec5fc0>
           │    └ <function _Parser.parse_from_state at 0x7f9cc01ace00>
           └ <lark.parsers.lalr_parser._Parser object at 0x7f9cbe5b6fd0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/lark/parsers/lalr_parser.py", line 188, in parse_from_state
    raise e
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/lark/parsers/lalr_parser.py", line 178, in parse_from_state
    for token in state.lexer.lex(state):
        │        │     │         └ <lark.parsers.lalr_parser.ParserState object at 0x7f9d35ec5fc0>
        │        │     └ <member 'lexer' of 'ParserState' objects>
        │        └ <lark.parsers.lalr_parser.ParserState object at 0x7f9d35ec5fc0>
        └ Token('LSEPARATOR', '(')
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/lark/lexer.py", line 487, in lex
    raise UnexpectedToken(token, e.allowed, state=parser_state, token_history=[last_token], terminals_by_name=self.root_lexer.terminals_by_name)
          │               │                       │                            │                              │    │          └ {'LSEPARATOR': TerminalDef('LSEPARATOR', '\\('), 'RSEPARATOR': TerminalDef('RSEPARATOR', '\\)'), 'EQUIVALENCE': TerminalDef('...
          │               │                       │                            │                              │    └ <lark.lexer.TraditionalLexer object at 0x7f9cbf2f0890>
          │               │                       │                            │                              └ <lark.lexer.ContextualLexer object at 0x7f9cbe584190>
          │               │                       │                            └ Token('LSEPARATOR', '(')
          │               │                       └ <lark.parsers.lalr_parser.ParserState object at 0x7f9d35ec5fc0>
          │               └ Token('RSEPARATOR', ')')
          └ <class 'lark.exceptions.UnexpectedToken'>

lark.exceptions.UnexpectedToken: Unexpected token Token('RSEPARATOR', ')') at line 1, column 2.
Expected one of: 
	* ALWAYS
	* NEXT
	* LAST
	* NOT
	* WEAK_NEXT
	* LSEPARATOR
	* SYMBOL_NAME
	* EVENTUALLY
Previous tokens: [Token('LSEPARATOR', '(')]

2024-10-05 20:22:26.002 | INFO     | webapp:cb_btn_translate:635 - Input dictionary: {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'minimal'}
2024-10-05 20:22:26.004 | DEBUG    | prefltlf2pdfa.prefltlf:parse:111 - Parsing prefltlf formula with auto_complete='minimal': 
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 20:22:26.059 | DEBUG    | prefltlf2pdfa.prefltlf:_construct_spec_ir:476 - Intermediate representation based on raw input: 
['0:F(a)  >  1:G(b)']
2024-10-05 20:22:26.089 | DEBUG    | prefltlf2pdfa.prefltlf:_auto_complete:503 - Intermediate representation based on raw input: ['0:F(a)  >  1:G(b)', '0:F(a)  >=  2:!((F(a) | G(b)))', '1:G(b)  >=  2:!((F(a) | G(b)))', '2:!((F(a) | G(b)))  >=  2:!((F(a) | G(b)))']
2024-10-05 20:22:26.090 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:547 - Clauses from intermediate representation:
set_w={(0, 2), (1, 2), (2, 2)} 
set_p={(0, 1)} 
set_i=set() 
set_j=set()
2024-10-05 20:22:26.091 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:576 - Clauses after applying transitive and reflexive closures:
set_p={(0, 1), (0, 2), (1, 2)} 
set_i={(0, 0), (1, 1), (2, 2)} 
set_j=set()
2024-10-05 20:22:26.092 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:621 - Partial order for input specification:
phi={0: F(a), 1: G(b), 2: !((F(a) | G(b)))}
model={(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)}
model={'(G(b), G(b))', '(F(a), !((F(a) | G(b))))', '(F(a), F(a))', '(F(a), G(b))', '(!((F(a) | G(b))), !((F(a) | G(b))))', '(G(b), !((F(a) | G(b))))'}
2024-10-05 20:22:26.092 | DEBUG    | prefltlf2pdfa.prefltlf:translate:152 - Translating the formula to preference automaton under semantics=`semantics_mp_forall_exists`:
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 20:22:26.144 | DEBUG    | prefltlf2pdfa.prefltlf:translate:171 - Constructed Automata: {0: F(a), 1: G(b), 2: !((F(a) | G(b)))} 

======== F(a) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'a': 2, '~a': 1}, 2: {'true': 2}}}

======== G(b) ========
{'final_states': {1},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'b': 1, '~b': 2}, 2: {'true': 2}}}

======== !((F(a) | G(b))) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2, 3},
 'transitions': {1: {'a': 3, 'b & ~a': 1, '~a & ~b': 2},
                 2: {'a': 3, '~a': 2},
                 3: {'true': 3}}}

2024-10-05 20:22:26.231 | DEBUG    | prefltlf2pdfa.viz:paut2dot:109 - Options for paut2dot: sa_state=False, sa_class=False, sa_color=False, pg_state=False
2024-10-05 20:27:35.314 | INFO     | webapp:cb_btn_translate:635 - Input dictionary: {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'none'}
2024-10-05 20:27:35.316 | DEBUG    | prefltlf2pdfa.prefltlf:parse:231 - Parsing prefltlf formula with auto_complete='none': 
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 20:27:35.371 | DEBUG    | prefltlf2pdfa.prefltlf:_construct_spec_ir:676 - Intermediate representation based on raw input: 
['0:F(a)  >  1:G(b)']
2024-10-05 20:27:35.404 | ERROR    | prefltlf2pdfa.prefltlf:parse:251 - The set of conditions phi = {G(b), F(a)} is not complete
2024-10-05 20:27:35.405 | ERROR    | webapp:cb_btn_translate:676 - The set of conditions phi = {G(b), F(a)} is not complete
Traceback (most recent call last):

  File "/home/abhibp1993/.pycharm_helpers/pydev/_pydev_bundle/pydev_monkey.py", line 805, in __call__
    ret = self.original_func(*self.args, **self.kwargs)
          │    │              │    │       │    └ {}
          │    │              │    │       └ <_pydev_bundle.pydev_monkey._NewThreadStartupWithTrace object at 0x7fc47236cad0>
          │    │              │    └ ()
          │    │              └ <_pydev_bundle.pydev_monkey._NewThreadStartupWithTrace object at 0x7fc47236cad0>
          │    └ <bound method Thread._bootstrap of <Thread(Thread-14 (process_request_thread), started daemon 140481706206976)>>
          └ <_pydev_bundle.pydev_monkey._NewThreadStartupWithTrace object at 0x7fc47236cad0>

  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 995, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7fc4ecbb0860>
    └ <Thread(Thread-14 (process_request_thread), started daemon 140481706206976)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 1038, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7fc4ecbb0540>
    └ <Thread(Thread-14 (process_request_thread), started daemon 140481706206976)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 975, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-14 (process_request_thread), started daemon 140481706206976)>
    │    │        │    └ (<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53362)>, ('127.0.0.1', 53362))
    │    │        └ <Thread(Thread-14 (process_request_thread), started daemon 140481706206976)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7fc4724d6090>>
    └ <Thread(Thread-14 (process_request_thread), started daemon 140481706206976)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 691, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 53362)
    │    │              └ <socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53362)>
    │    └ <function BaseServer.finish_request at 0x7fc48a9c2840>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7fc4724d6090>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 361, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7fc4724d6090>
    │    │                   │        └ ('127.0.0.1', 53362)
    │    │                   └ <socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53362)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7fc4724d6090>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 755, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7fc4864e1c60>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7fc4724a5810>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7fc48a9f0900>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7fc4724a5810>
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7fc4724a5810>>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'webapp'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7fc4724d6090>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7fc4724a5810>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7fc47237d580>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7fc47237c400>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=6>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7fc47237c400>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=6>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7fc485f7bd80>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7fc485f7b4c0>
               └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7fc485f7b420>
         └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/_dash-update-component'
           │    │           │    │              └ <Rule '/_dash-update-component' (OPTIONS, POST) -> /_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7fc485b34ea0>, '_dash_assets.static': <bound method Blueprint.send...
           │    │           └ <Flask 'webapp'>
           │    └ <function Flask.ensure_sync at 0x7fc485f7b6a0>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/dash.py", line 1373, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7fc4732ae280>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/_callback.py", line 465, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)
                   │                │      │            └ {}
                   │                │      └ [None, 1, 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', None, None,...
                   │                └ <function cb_btn_translate at 0x7fc4725eaa20>
                   └ <function _invoke_callback at 0x7fc485d54720>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/_callback.py", line 40, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (None, 1, 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', None, None,...
           └ <function cb_btn_translate at 0x7fc4725eaa20>

> File "/mnt/e/OneDrive - The University of Texas at Austin/4- Ongoing Research/4- Preference-based Planning/0-Code/prefltlf2pdfa-webapp/webapp.py", line 644, in cb_btn_translate
    phi, pdfa = translate_to_pdfa(input_dict)
                │                 └ {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': ...
                └ <function translate_to_pdfa at 0x7fc47261b6a0>

  File "/mnt/e/OneDrive - The University of Texas at Austin/4- Ongoing Research/4- Preference-based Planning/0-Code/prefltlf2pdfa-webapp/webapp.py", line 473, in translate_to_pdfa
    phi = pp.PrefLTLf(input_dict["spec"], alphabet=alphabet, auto_complete=input_dict["autocomplete"])
          │  │        │                            │                       └ {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': ...
          │  │        │                            └ set()
          │  │        └ {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': ...
          │  └ <class 'prefltlf2pdfa.prefltlf.PrefLTLf'>
          └ <module 'prefltlf2pdfa' from '/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/__init__.py'>

  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/prefltlf.py", line 116, in __init__
    self.parse(
    │    └ <function PrefLTLf.parse at 0x7fc472600720>
    └ <PrefLTLf Formula at 140481706519376>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/prefltlf.py", line 252, in parse
    raise ValueError(f"The set of conditions phi = {set(phi.values())} is not complete")

ValueError: The set of conditions phi = {G(b), F(a)} is not complete
2024-10-05 20:27:51.904 | INFO     | webapp:cb_btn_translate:635 - Input dictionary: {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'minimal'}
2024-10-05 20:27:51.906 | DEBUG    | prefltlf2pdfa.prefltlf:parse:231 - Parsing prefltlf formula with auto_complete='minimal': 
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 20:27:51.959 | DEBUG    | prefltlf2pdfa.prefltlf:_construct_spec_ir:676 - Intermediate representation based on raw input: 
['0:F(a)  >  1:G(b)']
2024-10-05 20:27:51.993 | DEBUG    | prefltlf2pdfa.prefltlf:_auto_complete:711 - Intermediate representation based on raw input: ['0:F(a)  >  1:G(b)', '0:F(a)  >=  2:!((F(a) | G(b)))', '1:G(b)  >=  2:!((F(a) | G(b)))', '2:!((F(a) | G(b)))  >=  2:!((F(a) | G(b)))']
2024-10-05 20:27:51.994 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:761 - Clauses from intermediate representation:
set_w={(0, 2), (1, 2), (2, 2)} 
set_p={(0, 1)} 
set_i=set() 
set_j=set()
2024-10-05 20:27:51.994 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:790 - Clauses after applying transitive and reflexive closures:
set_p={(0, 1), (0, 2), (1, 2)} 
set_i={(0, 0), (1, 1), (2, 2)} 
set_j=set()
2024-10-05 20:27:51.996 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:835 - Partial order for input specification:
phi={0: F(a), 1: G(b), 2: !((F(a) | G(b)))}
model={(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)}
model={'(F(a), F(a))', '(G(b), G(b))', '(F(a), !((F(a) | G(b))))', '(F(a), G(b))', '(!((F(a) | G(b))), !((F(a) | G(b))))', '(G(b), !((F(a) | G(b))))'}
2024-10-05 20:27:51.996 | DEBUG    | prefltlf2pdfa.prefltlf:translate:288 - Translating the formula to preference automaton under semantics=`semantics_mp_forall_exists`:
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 20:27:52.056 | DEBUG    | prefltlf2pdfa.prefltlf:translate:307 - Constructed Automata: {0: F(a), 1: G(b), 2: !((F(a) | G(b)))} 

======== F(a) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'a': 2, '~a': 1}, 2: {'true': 2}}}

======== G(b) ========
{'final_states': {1},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'b': 1, '~b': 2}, 2: {'true': 2}}}

======== !((F(a) | G(b))) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2, 3},
 'transitions': {1: {'a': 3, 'b & ~a': 1, '~a & ~b': 2},
                 2: {'a': 3, '~a': 2},
                 3: {'true': 3}}}

2024-10-05 20:27:52.152 | ERROR    | webapp:cb_btn_translate:676 - name 'utils' is not defined
Traceback (most recent call last):

  File "/home/abhibp1993/.pycharm_helpers/pydev/_pydev_bundle/pydev_monkey.py", line 805, in __call__
    ret = self.original_func(*self.args, **self.kwargs)
          │    │              │    │       │    └ {}
          │    │              │    │       └ <_pydev_bundle.pydev_monkey._NewThreadStartupWithTrace object at 0x7fc472517490>
          │    │              │    └ ()
          │    │              └ <_pydev_bundle.pydev_monkey._NewThreadStartupWithTrace object at 0x7fc472517490>
          │    └ <bound method Thread._bootstrap of <Thread(Thread-15 (process_request_thread), started daemon 140481706206976)>>
          └ <_pydev_bundle.pydev_monkey._NewThreadStartupWithTrace object at 0x7fc472517490>

  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 995, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7fc4ecbb0860>
    └ <Thread(Thread-15 (process_request_thread), started daemon 140481706206976)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 1038, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7fc4ecbb0540>
    └ <Thread(Thread-15 (process_request_thread), started daemon 140481706206976)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 975, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-15 (process_request_thread), started daemon 140481706206976)>
    │    │        │    └ (<socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53364)>, ('127.0.0.1', 53364))
    │    │        └ <Thread(Thread-15 (process_request_thread), started daemon 140481706206976)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7fc4724d6090>>
    └ <Thread(Thread-15 (process_request_thread), started daemon 140481706206976)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 691, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 53364)
    │    │              └ <socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53364)>
    │    └ <function BaseServer.finish_request at 0x7fc48a9c2840>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7fc4724d6090>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 361, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7fc4724d6090>
    │    │                   │        └ ('127.0.0.1', 53364)
    │    │                   └ <socket.socket fd=6, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 53364)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7fc4724d6090>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 755, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7fc4864e1c60>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7fc47233ad50>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7fc48a9f0900>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7fc47233ad50>
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7fc47233ad50>>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'webapp'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7fc4724d6090>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7fc47233ad50>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7fc47237e660>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7fc47237f1a0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=6>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7fc47237f1a0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=6>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7fc485f7bd80>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7fc485f7b4c0>
               └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7fc485f7b420>
         └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/_dash-update-component'
           │    │           │    │              └ <Rule '/_dash-update-component' (OPTIONS, POST) -> /_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7fc485b34ea0>, '_dash_assets.static': <bound method Blueprint.send...
           │    │           └ <Flask 'webapp'>
           │    └ <function Flask.ensure_sync at 0x7fc485f7b6a0>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/dash.py", line 1373, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7fc47237b980>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/_callback.py", line 465, in add_context
    output_value = _invoke_callback(func, *func_args, **func_kwargs)
                   │                │      │            └ {}
                   │                │      └ [None, 2, 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', None, None,...
                   │                └ <function cb_btn_translate at 0x7fc4725eaa20>
                   └ <function _invoke_callback at 0x7fc485d54720>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/_callback.py", line 40, in _invoke_callback
    return func(*args, **kwargs)  # %% callback invoked %%
           │     │       └ {}
           │     └ (None, 2, 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', None, None,...
           └ <function cb_btn_translate at 0x7fc4725eaa20>

> File "/mnt/e/OneDrive - The University of Texas at Austin/4- Ongoing Research/4- Preference-based Planning/0-Code/prefltlf2pdfa-webapp/webapp.py", line 644, in cb_btn_translate
    phi, pdfa = translate_to_pdfa(input_dict)
                │                 └ {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': ...
                └ <function translate_to_pdfa at 0x7fc47261b6a0>

  File "/mnt/e/OneDrive - The University of Texas at Austin/4- Ongoing Research/4- Preference-based Planning/0-Code/prefltlf2pdfa-webapp/webapp.py", line 492, in translate_to_pdfa
    pdfa = phi.translate(semantics=semantics)
           │   │                   └ <function semantics_mp_forall_exists at 0x7fc4725be480>
           │   └ <function PrefLTLf.translate at 0x7fc472601120>
           └ <PrefLTLf Formula at 140481706567312>

  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/prefltlf.py", line 313, in translate
    self._construct_preference_graph(aut, semantics, show_progress=show_progress)
    │    │                           │    │                        └ False
    │    │                           │    └ <function semantics_mp_forall_exists at 0x7fc4725be480>
    │    │                           └ <prefltlf2pdfa.prefltlf.PrefAutomaton object at 0x7fc4725486d0>
    │    └ <function PrefLTLf._construct_preference_graph at 0x7fc4725bf600>
    └ <PrefLTLf Formula at 140481706567312>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/prefltlf.py", line 583, in _construct_preference_graph
    if semantics(self.relation, source, target):
       │         │    │         │       └ (0, 1, 0)
       │         │    │         └ (0, 1, 0)
       │         │    └ {(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)}
       │         └ <PrefLTLf Formula at 140481706567312>
       └ <function semantics_mp_forall_exists at 0x7fc4725be480>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/semantics.py", line 129, in semantics_mp_forall_exists
    utils.maximal_outcomes(preorder, source),
                           │         └ (0, 1, 0)
                           └ {(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)}

NameError: name 'utils' is not defined
2024-10-05 19:36:24.499 | INFO     | webapp:cb_btn_translate:635 - Input dictionary: {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'minimal'}
2024-10-05 19:36:24.502 | DEBUG    | prefltlf2pdfa.prefltlf:parse:231 - Parsing prefltlf formula with auto_complete='minimal': 
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 19:36:24.545 | DEBUG    | prefltlf2pdfa.prefltlf:_construct_spec_ir:676 - Intermediate representation based on raw input: 
['0:F(a)  >  1:G(b)']
2024-10-05 19:36:24.586 | DEBUG    | prefltlf2pdfa.prefltlf:_auto_complete:711 - Intermediate representation based on raw input: ['0:F(a)  >  1:G(b)', '0:F(a)  >=  2:!((F(a) | G(b)))', '1:G(b)  >=  2:!((F(a) | G(b)))', '2:!((F(a) | G(b)))  >=  2:!((F(a) | G(b)))']
2024-10-05 19:36:24.587 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:761 - Clauses from intermediate representation:
set_w={(0, 2), (1, 2), (2, 2)} 
set_p={(0, 1)} 
set_i=set() 
set_j=set()
2024-10-05 19:36:24.587 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:790 - Clauses after applying transitive and reflexive closures:
set_p={(0, 1), (0, 2), (1, 2)} 
set_i={(0, 0), (1, 1), (2, 2)} 
set_j=set()
2024-10-05 19:36:24.587 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:835 - Partial order for input specification:
phi={0: F(a), 1: G(b), 2: !((F(a) | G(b)))}
model={(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)}
model={'(F(a), G(b))', '(G(b), !((F(a) | G(b))))', '(!((F(a) | G(b))), !((F(a) | G(b))))', '(G(b), G(b))', '(F(a), F(a))', '(F(a), !((F(a) | G(b))))'}
2024-10-05 19:36:24.588 | DEBUG    | prefltlf2pdfa.prefltlf:translate:288 - Translating the formula to preference automaton under semantics=`semantics_mp_forall_exists`:
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 19:36:24.679 | DEBUG    | prefltlf2pdfa.prefltlf:translate:307 - Constructed Automata: {0: F(a), 1: G(b), 2: !((F(a) | G(b)))} 

======== F(a) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'a': 2, '~a': 1}, 2: {'true': 2}}}

======== G(b) ========
{'final_states': {1},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'b': 1, '~b': 2}, 2: {'true': 2}}}

======== !((F(a) | G(b))) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2, 3},
 'transitions': {1: {'a': 3, 'b & ~a': 1, '~a & ~b': 2},
                 2: {'a': 3, '~a': 2},
                 3: {'true': 3}}}

2024-10-05 19:36:24.701 | ERROR    | webapp:cb_btn_translate:676 - unsupported operand type(s) for -: 'tuple' and 'set'
Traceback (most recent call last):

  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 995, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7f4b506189a0>
    └ <Thread(Thread-20 (process_request_thread), started daemon 139960761968192)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 1038, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7f4b50618680>
    └ <Thread(Thread-20 (process_request_thread), started daemon 139960761968192)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 975, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-20 (process_request_thread), started daemon 139960761968192)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 59502)>, ('127.0.0.1', 59502))
    │    │        └ <Thread(Thread-20 (process_request_thread), started daemon 139960761968192)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7f4b36ed1090>>
    └ <Thread(Thread-20 (process_request_thread), started daemon 139960761968192)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 691, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 59502)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 59502)>
    │    └ <function BaseServer.finish_request at 0x7f4b402f11c0>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f4b36ed1090>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 361, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f4b36ed1090>
    │    │                   │        └ ('127.0.0.1', 59502)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 59502)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f4b36ed1090>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 755, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7f4b3ff365c0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f4b403ecdd0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 390, in handle
    super().handle()
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7f4b40227100>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f4b403ecdd0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7f4b403ecdd0>>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 362, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'webapp'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f4b36ed1090>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7f4b403ecdd0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7f4b363e6ac0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 323, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f4b363e6c00>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1478, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f4b363e6c00>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7f4b3f9bff60>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1455, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7f4b3f9bf6a0>
               └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 867, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7f4b3f9bf600>
         └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 852, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/_dash-update-component'
           │    │           │    │              └ <Rule '/_dash-update-component' (POST, OPTIONS) -> /_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7f4b3dca6020>, '_dash_assets.static': <bound method Blueprint.send...
           │    │           └ <Flask 'webapp'>
           │    └ <function Flask.ensure_sync at 0x7f4b3f9bf880>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/dash.py", line 1310, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7f4b362a0140>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/_callback.py", line 442, in add_context
    output_value = func(*func_args, **func_kwargs)  # %% callback invoked %%
                   │     │            └ {}
                   │     └ [1, None, 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', None, None,...
                   └ <function cb_btn_translate at 0x7f4b363a5080>

> File "/mnt/c/Users/ank2595/OneDrive - The University of Texas at Austin/4- Ongoing Research/4- Preference-based Planning/0-Code/prefltlf2pdfa-webapp/webapp.py", line 644, in cb_btn_translate
    phi, pdfa = translate_to_pdfa(input_dict)
                │                 └ {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': ...
                └ <function translate_to_pdfa at 0x7f4b363a4f40>

  File "/mnt/c/Users/ank2595/OneDrive - The University of Texas at Austin/4- Ongoing Research/4- Preference-based Planning/0-Code/prefltlf2pdfa-webapp/webapp.py", line 492, in translate_to_pdfa
    pdfa = phi.translate(semantics=semantics)
           │   │                   └ <function semantics_mp_forall_exists at 0x7f4b3635b2e0>
           │   └ <function PrefLTLf.translate at 0x7f4b363e5b20>
           └ <PrefLTLf Formula at 139961020729040>

  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/prefltlf.py", line 313, in translate
    self._construct_preference_graph(aut, semantics, show_progress=show_progress)
    │    │                           │    │                        └ False
    │    │                           │    └ <function semantics_mp_forall_exists at 0x7f4b3635b2e0>
    │    │                           └ <prefltlf2pdfa.prefltlf.PrefAutomaton object at 0x7f4b37349e50>
    │    └ <function PrefLTLf._construct_preference_graph at 0x7f4b363e5760>
    └ <PrefLTLf Formula at 139961020729040>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/prefltlf.py", line 583, in _construct_preference_graph
    if semantics(self.relation, source, target):
       │         │    │         │       └ (0, 1, 0)
       │         │    │         └ (0, 1, 0)
       │         │    └ {(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)}
       │         └ <PrefLTLf Formula at 139961020729040>
       └ <function semantics_mp_forall_exists at 0x7f4b3635b2e0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/semantics.py", line 131, in semantics_mp_forall_exists
    utils.maximal_outcomes(preorder, source),
    │     │                │         └ (0, 1, 0)
    │     │                └ {(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)}
    │     └ <function maximal_outcomes at 0x7f4b3635afc0>
    └ <module 'prefltlf2pdfa.utils' from '/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/utils.py'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/utils.py", line 52, in maximal_outcomes
    return {f for f in outcomes if not any((t, f) in relation for t in outcomes - {f})}
                       │                             │                 └ (0, 1, 0)
                       │                             └ {(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)}
                       └ (0, 1, 0)
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/utils.py", line 52, in <setcomp>
    return {f for f in outcomes if not any((t, f) in relation for t in outcomes - {f})}
            │     │    │                       │     │                 │           └ 0
            │     │    │                       │     │                 └ (0, 1, 0)
            │     │    │                       │     └ {(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)}
            │     │    │                       └ 0
            │     │    └ (0, 1, 0)
            │     └ 0
            └ 0

TypeError: unsupported operand type(s) for -: 'tuple' and 'set'
2024-10-05 19:36:26.226 | INFO     | webapp:cb_btn_translate:635 - Input dictionary: {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'minimal'}
2024-10-05 19:36:26.227 | DEBUG    | prefltlf2pdfa.prefltlf:parse:231 - Parsing prefltlf formula with auto_complete='minimal': 
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 19:36:26.266 | DEBUG    | prefltlf2pdfa.prefltlf:_construct_spec_ir:676 - Intermediate representation based on raw input: 
['0:F(a)  >  1:G(b)']
2024-10-05 19:36:26.301 | DEBUG    | prefltlf2pdfa.prefltlf:_auto_complete:711 - Intermediate representation based on raw input: ['0:F(a)  >  1:G(b)', '0:F(a)  >=  2:!((F(a) | G(b)))', '1:G(b)  >=  2:!((F(a) | G(b)))', '2:!((F(a) | G(b)))  >=  2:!((F(a) | G(b)))']
2024-10-05 19:36:26.301 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:761 - Clauses from intermediate representation:
set_w={(0, 2), (1, 2), (2, 2)} 
set_p={(0, 1)} 
set_i=set() 
set_j=set()
2024-10-05 19:36:26.302 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:790 - Clauses after applying transitive and reflexive closures:
set_p={(0, 1), (0, 2), (1, 2)} 
set_i={(0, 0), (1, 1), (2, 2)} 
set_j=set()
2024-10-05 19:36:26.302 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:835 - Partial order for input specification:
phi={0: F(a), 1: G(b), 2: !((F(a) | G(b)))}
model={(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)}
model={'(F(a), G(b))', '(G(b), !((F(a) | G(b))))', '(!((F(a) | G(b))), !((F(a) | G(b))))', '(G(b), G(b))', '(F(a), F(a))', '(F(a), !((F(a) | G(b))))'}
2024-10-05 19:36:26.302 | DEBUG    | prefltlf2pdfa.prefltlf:translate:288 - Translating the formula to preference automaton under semantics=`semantics_mp_forall_exists`:
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 19:36:26.383 | DEBUG    | prefltlf2pdfa.prefltlf:translate:307 - Constructed Automata: {0: F(a), 1: G(b), 2: !((F(a) | G(b)))} 

======== F(a) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'a': 2, '~a': 1}, 2: {'true': 2}}}

======== G(b) ========
{'final_states': {1},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'b': 1, '~b': 2}, 2: {'true': 2}}}

======== !((F(a) | G(b))) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2, 3},
 'transitions': {1: {'a': 3, 'b & ~a': 1, '~a & ~b': 2},
                 2: {'a': 3, '~a': 2},
                 3: {'true': 3}}}

2024-10-05 19:36:26.398 | ERROR    | webapp:cb_btn_translate:676 - unsupported operand type(s) for -: 'tuple' and 'set'
Traceback (most recent call last):

  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 995, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7f4b506189a0>
    └ <Thread(Thread-22 (process_request_thread), started daemon 139960761968192)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 1038, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7f4b50618680>
    └ <Thread(Thread-22 (process_request_thread), started daemon 139960761968192)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 975, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-22 (process_request_thread), started daemon 139960761968192)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 59512)>, ('127.0.0.1', 59512))
    │    │        └ <Thread(Thread-22 (process_request_thread), started daemon 139960761968192)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7f4b36ed1090>>
    └ <Thread(Thread-22 (process_request_thread), started daemon 139960761968192)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 691, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 59512)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 59512)>
    │    └ <function BaseServer.finish_request at 0x7f4b402f11c0>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f4b36ed1090>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 361, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f4b36ed1090>
    │    │                   │        └ ('127.0.0.1', 59512)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 59512)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f4b36ed1090>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 755, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7f4b3ff365c0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f4b3629d290>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 390, in handle
    super().handle()
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7f4b40227100>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f4b3629d290>
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7f4b3629d290>>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 362, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'webapp'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f4b36ed1090>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7f4b3629d290>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7f4b359bd8a0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 323, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f4b359bd6c0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1478, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f4b359bd6c0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7f4b3f9bff60>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1455, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7f4b3f9bf6a0>
               └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 867, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7f4b3f9bf600>
         └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 852, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/_dash-update-component'
           │    │           │    │              └ <Rule '/_dash-update-component' (POST, OPTIONS) -> /_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7f4b3dca6020>, '_dash_assets.static': <bound method Blueprint.send...
           │    │           └ <Flask 'webapp'>
           │    └ <function Flask.ensure_sync at 0x7f4b3f9bf880>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/dash.py", line 1310, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7f4b36285a80>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/_callback.py", line 442, in add_context
    output_value = func(*func_args, **func_kwargs)  # %% callback invoked %%
                   │     │            └ {}
                   │     └ [1, 1, 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', None, None, 's...
                   └ <function cb_btn_translate at 0x7f4b363a5080>

> File "/mnt/c/Users/ank2595/OneDrive - The University of Texas at Austin/4- Ongoing Research/4- Preference-based Planning/0-Code/prefltlf2pdfa-webapp/webapp.py", line 644, in cb_btn_translate
    phi, pdfa = translate_to_pdfa(input_dict)
                │                 └ {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': ...
                └ <function translate_to_pdfa at 0x7f4b363a4f40>

  File "/mnt/c/Users/ank2595/OneDrive - The University of Texas at Austin/4- Ongoing Research/4- Preference-based Planning/0-Code/prefltlf2pdfa-webapp/webapp.py", line 492, in translate_to_pdfa
    pdfa = phi.translate(semantics=semantics)
           │   │                   └ <function semantics_mp_forall_exists at 0x7f4b3635b2e0>
           │   └ <function PrefLTLf.translate at 0x7f4b363e5b20>
           └ <PrefLTLf Formula at 139961009205392>

  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/prefltlf.py", line 313, in translate
    self._construct_preference_graph(aut, semantics, show_progress=show_progress)
    │    │                           │    │                        └ False
    │    │                           │    └ <function semantics_mp_forall_exists at 0x7f4b3635b2e0>
    │    │                           └ <prefltlf2pdfa.prefltlf.PrefAutomaton object at 0x7f4b370a79d0>
    │    └ <function PrefLTLf._construct_preference_graph at 0x7f4b363e5760>
    └ <PrefLTLf Formula at 139961009205392>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/prefltlf.py", line 583, in _construct_preference_graph
    if semantics(self.relation, source, target):
       │         │    │         │       └ (0, 1, 0)
       │         │    │         └ (0, 1, 0)
       │         │    └ {(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)}
       │         └ <PrefLTLf Formula at 139961009205392>
       └ <function semantics_mp_forall_exists at 0x7f4b3635b2e0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/semantics.py", line 131, in semantics_mp_forall_exists
    utils.maximal_outcomes(preorder, source),
    │     │                │         └ (0, 1, 0)
    │     │                └ {(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)}
    │     └ <function maximal_outcomes at 0x7f4b3635afc0>
    └ <module 'prefltlf2pdfa.utils' from '/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/utils.py'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/utils.py", line 52, in maximal_outcomes
    return {f for f in outcomes if not any((t, f) in relation for t in outcomes - {f})}
                       │                             │                 └ (0, 1, 0)
                       │                             └ {(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)}
                       └ (0, 1, 0)
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/utils.py", line 52, in <setcomp>
    return {f for f in outcomes if not any((t, f) in relation for t in outcomes - {f})}
            │     │    │                       │     │                 │           └ 0
            │     │    │                       │     │                 └ (0, 1, 0)
            │     │    │                       │     └ {(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)}
            │     │    │                       └ 0
            │     │    └ (0, 1, 0)
            │     └ 0
            └ 0

TypeError: unsupported operand type(s) for -: 'tuple' and 'set'
2024-10-05 19:45:38.026 | INFO     | webapp:cb_btn_translate:635 - Input dictionary: {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'minimal'}
2024-10-05 19:45:38.027 | DEBUG    | prefltlf2pdfa.prefltlf:parse:231 - Parsing prefltlf formula with auto_complete='minimal': 
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 19:45:38.074 | DEBUG    | prefltlf2pdfa.prefltlf:_construct_spec_ir:676 - Intermediate representation based on raw input: 
['0:F(a)  >  1:G(b)']
2024-10-05 19:45:38.115 | DEBUG    | prefltlf2pdfa.prefltlf:_auto_complete:711 - Intermediate representation based on raw input: ['0:F(a)  >  1:G(b)', '0:F(a)  >=  2:!((F(a) | G(b)))', '1:G(b)  >=  2:!((F(a) | G(b)))', '2:!((F(a) | G(b)))  >=  2:!((F(a) | G(b)))']
2024-10-05 19:45:38.116 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:761 - Clauses from intermediate representation:
set_w={(0, 2), (1, 2), (2, 2)} 
set_p={(0, 1)} 
set_i=set() 
set_j=set()
2024-10-05 19:45:38.116 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:790 - Clauses after applying transitive and reflexive closures:
set_p={(0, 1), (0, 2), (1, 2)} 
set_i={(0, 0), (1, 1), (2, 2)} 
set_j=set()
2024-10-05 19:45:38.117 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:835 - Partial order for input specification:
phi={0: F(a), 1: G(b), 2: !((F(a) | G(b)))}
model={(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)}
model={'(!((F(a) | G(b))), !((F(a) | G(b))))', '(F(a), !((F(a) | G(b))))', '(F(a), F(a))', '(F(a), G(b))', '(G(b), !((F(a) | G(b))))', '(G(b), G(b))'}
2024-10-05 19:45:38.117 | DEBUG    | prefltlf2pdfa.prefltlf:translate:288 - Translating the formula to preference automaton under semantics=`semantics_mp_forall_exists`:
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 19:45:38.289 | DEBUG    | prefltlf2pdfa.prefltlf:translate:307 - Constructed Automata: {0: F(a), 1: G(b), 2: !((F(a) | G(b)))} 

======== F(a) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'a': 2, '~a': 1}, 2: {'true': 2}}}

======== G(b) ========
{'final_states': {1},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'b': 1, '~b': 2}, 2: {'true': 2}}}

======== !((F(a) | G(b))) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2, 3},
 'transitions': {1: {'a': 3, 'b & ~a': 1, '~a & ~b': 2},
                 2: {'a': 3, '~a': 2},
                 3: {'true': 3}}}

2024-10-05 19:45:38.310 | DEBUG    | prefltlf2pdfa.viz:paut2dot:145 - Options for paut2dot: sa_state=False, sa_class=False, sa_color=False, pg_state=False
2024-10-05 19:45:38.310 | ERROR    | webapp:cb_btn_translate:676 - 2
Traceback (most recent call last):

  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 995, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7f877c4089a0>
    └ <Thread(Thread-1 (process_request_thread), started daemon 140219441530432)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 1038, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7f877c408680>
    └ <Thread(Thread-1 (process_request_thread), started daemon 140219441530432)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 975, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-1 (process_request_thread), started daemon 140219441530432)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 60324)>, ('127.0.0.1', 60324))
    │    │        └ <Thread(Thread-1 (process_request_thread), started daemon 140219441530432)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7f876264b050>>
    └ <Thread(Thread-1 (process_request_thread), started daemon 140219441530432)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 691, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 60324)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 60324)>
    │    └ <function BaseServer.finish_request at 0x7f876c0e91c0>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f876264b050>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 361, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f876264b050>
    │    │                   │        └ ('127.0.0.1', 60324)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 60324)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f876264b050>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 755, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7f876bd2e5c0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f87625a6450>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 390, in handle
    super().handle()
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7f876c01f100>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f87625a6450>
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7f87625a6450>>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 362, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'webapp'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f876264b050>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7f87625a6450>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7f87621ea840>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 323, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f87621eaa20>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1478, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f87621eaa20>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7f876b7b7f60>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1455, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7f876b7b76a0>
               └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 867, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7f876b7b7600>
         └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 852, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/_dash-update-component'
           │    │           │    │              └ <Rule '/_dash-update-component' (OPTIONS, POST) -> /_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7f8769a8a020>, '_dash_assets.static': <bound method Blueprint.send...
           │    │           └ <Flask 'webapp'>
           │    └ <function Flask.ensure_sync at 0x7f876b7b7880>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/dash.py", line 1310, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7f87621ab3c0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/_callback.py", line 442, in add_context
    output_value = func(*func_args, **func_kwargs)  # %% callback invoked %%
                   │     │            └ {}
                   │     └ [1, 2, 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', None, None, 's...
                   └ <function cb_btn_translate at 0x7f876218e520>

> File "/mnt/c/Users/ank2595/OneDrive - The University of Texas at Austin/4- Ongoing Research/4- Preference-based Planning/0-Code/prefltlf2pdfa-webapp/webapp.py", line 646, in cb_btn_translate
    semi_aut, pref_graph = pp.paut2dot(pdfa, **input_dict["options"])
    │                      │  │        │       └ {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': ...
    │                      │  │        └ <prefltlf2pdfa.prefltlf.PrefAutomaton object at 0x7f87621c3a10>
    │                      │  └ <function paut2dot at 0x7f87621ea0c0>
    │                      └ <module 'prefltlf2pdfa' from '/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/__init__.py'>
    └ Container(children=[Row([Col([Container(children=[Label(children='Semi-automaton', className='box-title', style={'text-decora...

  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/viz.py", line 154, in paut2dot
    dot_semi_aut = _create_dot_semi_automaton(paut=paut, node2color=node2color, **kwargs)
                   │                               │                │             └ {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}
                   │                               │                └ None
                   │                               └ <prefltlf2pdfa.prefltlf.PrefAutomaton object at 0x7f87621c3a10>
                   └ <function _create_dot_semi_automaton at 0x7f87621ea200>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/viz.py", line 55, in _create_dot_semi_automaton
    for sid, data in paut.get_states(data=True):
                     │    └ <function PrefAutomaton.get_states at 0x7f87621e8680>
                     └ <prefltlf2pdfa.prefltlf.PrefAutomaton object at 0x7f87621c3a10>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/prefltlf2pdfa/prefltlf.py", line 1082, in get_states
    sid = state2node[state]
          │          └ 2
          └ {(1, 1, 1): 0, (1, 2, 2): 1, (2, 2, 3): 2, (2, 1, 3): 3}

KeyError: 2
2024-10-05 19:47:00.305 | INFO     | webapp:cb_btn_translate:635 - Input dictionary: {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'minimal'}
2024-10-05 19:47:00.305 | DEBUG    | prefltlf2pdfa.prefltlf:parse:231 - Parsing prefltlf formula with auto_complete='minimal': 
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 19:47:00.355 | DEBUG    | prefltlf2pdfa.prefltlf:_construct_spec_ir:676 - Intermediate representation based on raw input: 
['0:F(a)  >  1:G(b)']
2024-10-05 19:47:00.401 | DEBUG    | prefltlf2pdfa.prefltlf:_auto_complete:711 - Intermediate representation based on raw input: ['0:F(a)  >  1:G(b)', '0:F(a)  >=  2:!((F(a) | G(b)))', '1:G(b)  >=  2:!((F(a) | G(b)))', '2:!((F(a) | G(b)))  >=  2:!((F(a) | G(b)))']
2024-10-05 19:47:00.402 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:761 - Clauses from intermediate representation:
set_w={(0, 2), (1, 2), (2, 2)} 
set_p={(0, 1)} 
set_i=set() 
set_j=set()
2024-10-05 19:47:00.402 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:790 - Clauses after applying transitive and reflexive closures:
set_p={(0, 1), (0, 2), (1, 2)} 
set_i={(0, 0), (1, 1), (2, 2)} 
set_j=set()
2024-10-05 19:47:00.403 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:835 - Partial order for input specification:
phi={0: F(a), 1: G(b), 2: !((F(a) | G(b)))}
model={(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)}
model={'(F(a), G(b))', '(F(a), !((F(a) | G(b))))', '(F(a), F(a))', '(!((F(a) | G(b))), !((F(a) | G(b))))', '(G(b), G(b))', '(G(b), !((F(a) | G(b))))'}
2024-10-05 19:47:00.403 | DEBUG    | prefltlf2pdfa.prefltlf:translate:288 - Translating the formula to preference automaton under semantics=`semantics_mp_forall_exists`:
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 19:47:00.868 | DEBUG    | prefltlf2pdfa.prefltlf:translate:307 - Constructed Automata: {0: F(a), 1: G(b), 2: !((F(a) | G(b)))} 

======== F(a) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'a': 2, '~a': 1}, 2: {'true': 2}}}

======== G(b) ========
{'final_states': {1},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'b': 1, '~b': 2}, 2: {'true': 2}}}

======== !((F(a) | G(b))) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2, 3},
 'transitions': {1: {'a': 3, 'b & ~a': 1, '~a & ~b': 2},
                 2: {'a': 3, '~a': 2},
                 3: {'true': 3}}}

2024-10-05 19:47:00.892 | DEBUG    | prefltlf2pdfa.viz:paut2dot:145 - Options for paut2dot: sa_state=False, sa_class=False, sa_color=False, pg_state=False
2024-10-05 19:47:00.988 | INFO     | webapp:cb_btn_translate:657 - Output dictionary: {'input': {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'minimal'}, 'formula': {'f_str': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'atoms': ['a', 'b'], 'alphabet': [], 'phi': {0: 'F(a)', 1: 'G(b)', 2: '!((F(a) | G(b)))'}, 'relation': [(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)]}, 'pdfa': {'states': {0: {'name': (1, 1, 1), 'partition': 1}, 1: {'name': (1, 2, 2), 'partition': 2}, 2: {'name': (2, 2, 3), 'partition': 0}, 3: {'name': (2, 1, 3), 'partition': 0}}, 'atoms': {'a', 'b'}, 'alphabet': [], 'transitions': {0: {'a & !b': 2, 'a & b': 3, 'b & !a': 0, '!a & !b': 1}, 1: {'!a': 1, 'a': 2}, 2: {'true': 2}, 3: {'!b': 2, 'b': 3}}, 'init_state': 0, 'pref_graph': {'nodes': {0: {'name': 'F(a)', 'partition': {2, 3}}, 1: {'name': 'G(b)', 'partition': {0}}, 2: {'name': '!((F(a) | G(b)))', 'partition': {1}}}, 'edges': {0: [0], 1: [0, 1], 2: [0, 1, 2]}}}}
2024-10-05 19:47:00.989 | ERROR    | webapp:cb_btn_translate:676 - Object of type set is not JSON serializable
Traceback (most recent call last):

  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 995, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7f01308fc9a0>
    └ <Thread(Thread-1 (process_request_thread), started daemon 139642646005312)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 1038, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7f01308fc680>
    └ <Thread(Thread-1 (process_request_thread), started daemon 139642646005312)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 975, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-1 (process_request_thread), started daemon 139642646005312)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 47632)>, ('127.0.0.1', 47632))
    │    │        └ <Thread(Thread-1 (process_request_thread), started daemon 139642646005312)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7f0116857350>>
    └ <Thread(Thread-1 (process_request_thread), started daemon 139642646005312)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 691, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 47632)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 47632)>
    │    └ <function BaseServer.finish_request at 0x7f01205e51c0>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f0116857350>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 361, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f0116857350>
    │    │                   │        └ ('127.0.0.1', 47632)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 47632)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f0116857350>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 755, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7f01202165c0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f011705e510>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 390, in handle
    super().handle()
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7f0120503100>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f011705e510>
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7f011705e510>>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 362, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'webapp'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f0116857350>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7f011705e510>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7f0116646d40>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 323, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f0116646de0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1478, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f0116646de0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7f011fc97f60>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1455, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7f011fc976a0>
               └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 867, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7f011fc97600>
         └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 852, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/_dash-update-component'
           │    │           │    │              └ <Rule '/_dash-update-component' (POST, OPTIONS) -> /_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7f011df2e020>, '_dash_assets.static': <bound method Blueprint.send...
           │    │           └ <Flask 'webapp'>
           │    └ <function Flask.ensure_sync at 0x7f011fc97880>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/dash.py", line 1310, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7f01166343c0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/_callback.py", line 442, in add_context
    output_value = func(*func_args, **func_kwargs)  # %% callback invoked %%
                   │     │            └ {}
                   │     └ [1, 3, 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', None, None, 's...
                   └ <function cb_btn_translate at 0x7f011661c180>

> File "/mnt/c/Users/ank2595/OneDrive - The University of Texas at Austin/4- Ongoing Research/4- Preference-based Planning/0-Code/prefltlf2pdfa-webapp/webapp.py", line 669, in cb_btn_translate
    dict(content=f"{json.dumps(output_dict, indent=2)}", filename="hello.json")

  File "/home/abhibp1993/miniconda3/lib/python3.11/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
      │          └ {'input': {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'a...
      └ {}
  File "/home/abhibp1993/miniconda3/lib/python3.11/json/encoder.py", line 202, in encode
    chunks = list(chunks)
                  └ <generator object _make_iterencode.<locals>._iterencode at 0x7f011677ae40>
  File "/home/abhibp1993/miniconda3/lib/python3.11/json/encoder.py", line 432, in _iterencode
    yield from _iterencode_dict(o, _current_indent_level)
               │                │  └ 0
               │                └ {'input': {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'a...
               └ <function _make_iterencode.<locals>._iterencode_dict at 0x7f011655d620>
  File "/home/abhibp1993/miniconda3/lib/python3.11/json/encoder.py", line 406, in _iterencode_dict
    yield from chunks
               └ <generator object _make_iterencode.<locals>._iterencode_dict at 0x7f01165185b0>
  File "/home/abhibp1993/miniconda3/lib/python3.11/json/encoder.py", line 406, in _iterencode_dict
    yield from chunks
               └ <generator object _make_iterencode.<locals>._iterencode at 0x7f011677b120>
  File "/home/abhibp1993/miniconda3/lib/python3.11/json/encoder.py", line 439, in _iterencode
    o = _default(o)
        │        └ {'a', 'b'}
        └ <bound method JSONEncoder.default of <json.encoder.JSONEncoder object at 0x7f0116b0af10>>
  File "/home/abhibp1993/miniconda3/lib/python3.11/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '

TypeError: Object of type set is not JSON serializable
2024-10-05 19:47:02.610 | INFO     | webapp:cb_btn_translate:635 - Input dictionary: {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'minimal'}
2024-10-05 19:47:02.610 | DEBUG    | prefltlf2pdfa.prefltlf:parse:231 - Parsing prefltlf formula with auto_complete='minimal': 
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 19:47:02.660 | DEBUG    | prefltlf2pdfa.prefltlf:_construct_spec_ir:676 - Intermediate representation based on raw input: 
['0:F(a)  >  1:G(b)']
2024-10-05 19:47:03.011 | DEBUG    | prefltlf2pdfa.prefltlf:_auto_complete:711 - Intermediate representation based on raw input: ['0:F(a)  >  1:G(b)', '0:F(a)  >=  2:!((F(a) | G(b)))', '1:G(b)  >=  2:!((F(a) | G(b)))', '2:!((F(a) | G(b)))  >=  2:!((F(a) | G(b)))']
2024-10-05 19:47:03.012 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:761 - Clauses from intermediate representation:
set_w={(0, 2), (1, 2), (2, 2)} 
set_p={(0, 1)} 
set_i=set() 
set_j=set()
2024-10-05 19:47:03.013 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:790 - Clauses after applying transitive and reflexive closures:
set_p={(0, 1), (0, 2), (1, 2)} 
set_i={(0, 0), (1, 1), (2, 2)} 
set_j=set()
2024-10-05 19:47:03.013 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:835 - Partial order for input specification:
phi={0: F(a), 1: G(b), 2: !((F(a) | G(b)))}
model={(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)}
model={'(F(a), G(b))', '(F(a), !((F(a) | G(b))))', '(F(a), F(a))', '(!((F(a) | G(b))), !((F(a) | G(b))))', '(G(b), G(b))', '(G(b), !((F(a) | G(b))))'}
2024-10-05 19:47:03.014 | DEBUG    | prefltlf2pdfa.prefltlf:translate:288 - Translating the formula to preference automaton under semantics=`semantics_mp_forall_exists`:
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 19:47:03.615 | DEBUG    | prefltlf2pdfa.prefltlf:translate:307 - Constructed Automata: {0: F(a), 1: G(b), 2: !((F(a) | G(b)))} 

======== F(a) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'a': 2, '~a': 1}, 2: {'true': 2}}}

======== G(b) ========
{'final_states': {1},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'b': 1, '~b': 2}, 2: {'true': 2}}}

======== !((F(a) | G(b))) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2, 3},
 'transitions': {1: {'a': 3, 'b & ~a': 1, '~a & ~b': 2},
                 2: {'a': 3, '~a': 2},
                 3: {'true': 3}}}

2024-10-05 19:47:03.630 | DEBUG    | prefltlf2pdfa.viz:paut2dot:145 - Options for paut2dot: sa_state=False, sa_class=False, sa_color=False, pg_state=False
2024-10-05 19:47:03.663 | INFO     | webapp:cb_btn_translate:657 - Output dictionary: {'input': {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'minimal'}, 'formula': {'f_str': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'atoms': ['a', 'b'], 'alphabet': [], 'phi': {0: 'F(a)', 1: 'G(b)', 2: '!((F(a) | G(b)))'}, 'relation': [(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)]}, 'pdfa': {'states': {0: {'name': (1, 1, 1), 'partition': 1}, 1: {'name': (1, 2, 2), 'partition': 2}, 2: {'name': (2, 2, 3), 'partition': 0}, 3: {'name': (2, 1, 3), 'partition': 0}}, 'atoms': {'a', 'b'}, 'alphabet': [], 'transitions': {0: {'a & !b': 2, 'a & b': 3, 'b & !a': 0, '!a & !b': 1}, 1: {'!a': 1, 'a': 2}, 2: {'true': 2}, 3: {'!b': 2, 'b': 3}}, 'init_state': 0, 'pref_graph': {'nodes': {0: {'name': 'F(a)', 'partition': {2, 3}}, 1: {'name': 'G(b)', 'partition': {0}}, 2: {'name': '!((F(a) | G(b)))', 'partition': {1}}}, 'edges': {0: [0], 1: [0, 1], 2: [0, 1, 2]}}}}
2024-10-05 19:47:03.665 | ERROR    | webapp:cb_btn_translate:676 - Object of type set is not JSON serializable
Traceback (most recent call last):

  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 995, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7f01308fc9a0>
    └ <Thread(Thread-11 (process_request_thread), started daemon 139642646005312)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 1038, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7f01308fc680>
    └ <Thread(Thread-11 (process_request_thread), started daemon 139642646005312)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/threading.py", line 975, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-11 (process_request_thread), started daemon 139642646005312)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 47644)>, ('127.0.0.1', 47644))
    │    │        └ <Thread(Thread-11 (process_request_thread), started daemon 139642646005312)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7f0116857350>>
    └ <Thread(Thread-11 (process_request_thread), started daemon 139642646005312)>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 691, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('127.0.0.1', 47644)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 47644)>
    │    └ <function BaseServer.finish_request at 0x7f01205e51c0>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f0116857350>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 361, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f0116857350>
    │    │                   │        └ ('127.0.0.1', 47644)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('127.0.0.1', 5080), raddr=('127.0.0.1', 47644)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f0116857350>
  File "/home/abhibp1993/miniconda3/lib/python3.11/socketserver.py", line 755, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7f01202165c0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f01166d7650>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 390, in handle
    super().handle()
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7f0120503100>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f01166d7650>
  File "/home/abhibp1993/miniconda3/lib/python3.11/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7f01166d7650>>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 362, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'webapp'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f0116857350>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7f01166d7650>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7f011655f100>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/werkzeug/serving.py", line 323, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f011655f060>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1478, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f011655f060>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7f011fc97f60>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 1455, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7f011fc976a0>
               └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 867, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7f011fc97600>
         └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/flask/app.py", line 852, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ '/_dash-update-component'
           │    │           │    │              └ <Rule '/_dash-update-component' (POST, OPTIONS) -> /_dash-update-component>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7f011df2e020>, '_dash_assets.static': <bound method Blueprint.send...
           │    │           └ <Flask 'webapp'>
           │    └ <function Flask.ensure_sync at 0x7f011fc97880>
           └ <Flask 'webapp'>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/dash.py", line 1310, in dispatch
    ctx.run(
    │   └ <method 'run' of '_contextvars.Context' objects>
    └ <_contextvars.Context object at 0x7f0114439a40>
  File "/home/abhibp1993/miniconda3/lib/python3.11/site-packages/dash/_callback.py", line 442, in add_context
    output_value = func(*func_args, **func_kwargs)  # %% callback invoked %%
                   │     │            └ {}
                   │     └ [1, 4, 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', None, None, 's...
                   └ <function cb_btn_translate at 0x7f011661c180>

> File "/mnt/c/Users/ank2595/OneDrive - The University of Texas at Austin/4- Ongoing Research/4- Preference-based Planning/0-Code/prefltlf2pdfa-webapp/webapp.py", line 669, in cb_btn_translate
    dict(content=f"{json.dumps(output_dict, indent=2)}", filename="hello.json")

  File "/home/abhibp1993/miniconda3/lib/python3.11/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
      │          └ {'input': {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'a...
      └ {}
  File "/home/abhibp1993/miniconda3/lib/python3.11/json/encoder.py", line 202, in encode
    chunks = list(chunks)
                  └ <generator object _make_iterencode.<locals>._iterencode at 0x7f011677b290>
  File "/home/abhibp1993/miniconda3/lib/python3.11/json/encoder.py", line 432, in _iterencode
    yield from _iterencode_dict(o, _current_indent_level)
               │                │  └ 0
               │                └ {'input': {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'a...
               └ <function _make_iterencode.<locals>._iterencode_dict at 0x7f0114456200>
  File "/home/abhibp1993/miniconda3/lib/python3.11/json/encoder.py", line 406, in _iterencode_dict
    yield from chunks
               └ <generator object _make_iterencode.<locals>._iterencode_dict at 0x7f0116518950>
  File "/home/abhibp1993/miniconda3/lib/python3.11/json/encoder.py", line 406, in _iterencode_dict
    yield from chunks
               └ <generator object _make_iterencode.<locals>._iterencode at 0x7f011677b570>
  File "/home/abhibp1993/miniconda3/lib/python3.11/json/encoder.py", line 439, in _iterencode
    o = _default(o)
        │        └ {'a', 'b'}
        └ <bound method JSONEncoder.default of <json.encoder.JSONEncoder object at 0x7f011445b350>>
  File "/home/abhibp1993/miniconda3/lib/python3.11/json/encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '

TypeError: Object of type set is not JSON serializable
2024-10-05 19:48:40.106 | INFO     | webapp:cb_btn_translate:635 - Input dictionary: {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'minimal'}
2024-10-05 19:48:40.107 | DEBUG    | prefltlf2pdfa.prefltlf:parse:231 - Parsing prefltlf formula with auto_complete='minimal': 
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 19:48:40.186 | DEBUG    | prefltlf2pdfa.prefltlf:_construct_spec_ir:676 - Intermediate representation based on raw input: 
['0:F(a)  >  1:G(b)']
2024-10-05 19:48:40.233 | DEBUG    | prefltlf2pdfa.prefltlf:_auto_complete:711 - Intermediate representation based on raw input: ['0:F(a)  >  1:G(b)', '0:F(a)  >=  2:!((F(a) | G(b)))', '1:G(b)  >=  2:!((F(a) | G(b)))', '2:!((F(a) | G(b)))  >=  2:!((F(a) | G(b)))']
2024-10-05 19:48:40.234 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:761 - Clauses from intermediate representation:
set_w={(0, 2), (1, 2), (2, 2)} 
set_p={(0, 1)} 
set_i=set() 
set_j=set()
2024-10-05 19:48:40.234 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:790 - Clauses after applying transitive and reflexive closures:
set_p={(0, 1), (0, 2), (1, 2)} 
set_i={(0, 0), (1, 1), (2, 2)} 
set_j=set()
2024-10-05 19:48:40.235 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:835 - Partial order for input specification:
phi={0: F(a), 1: G(b), 2: !((F(a) | G(b)))}
model={(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)}
model={'(G(b), G(b))', '(F(a), !((F(a) | G(b))))', '(G(b), !((F(a) | G(b))))', '(!((F(a) | G(b))), !((F(a) | G(b))))', '(F(a), G(b))', '(F(a), F(a))'}
2024-10-05 19:48:40.235 | DEBUG    | prefltlf2pdfa.prefltlf:translate:288 - Translating the formula to preference automaton under semantics=`semantics_mp_forall_exists`:
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 19:48:40.324 | DEBUG    | prefltlf2pdfa.prefltlf:translate:307 - Constructed Automata: {0: F(a), 1: G(b), 2: !((F(a) | G(b)))} 

======== F(a) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'a': 2, '~a': 1}, 2: {'true': 2}}}

======== G(b) ========
{'final_states': {1},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'b': 1, '~b': 2}, 2: {'true': 2}}}

======== !((F(a) | G(b))) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2, 3},
 'transitions': {1: {'a': 3, 'b & ~a': 1, '~a & ~b': 2},
                 2: {'a': 3, '~a': 2},
                 3: {'true': 3}}}

2024-10-05 19:48:40.379 | DEBUG    | prefltlf2pdfa.viz:paut2dot:145 - Options for paut2dot: sa_state=False, sa_class=False, sa_color=False, pg_state=False
2024-10-05 19:49:29.390 | INFO     | webapp:cb_btn_translate:657 - Output dictionary: {'input': {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'minimal'}, 'formula': {'f_str': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'atoms': ['b', 'a'], 'alphabet': [], 'phi': {0: 'F(a)', 1: 'G(b)', 2: '!((F(a) | G(b)))'}, 'relation': [(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)]}, 'pdfa': {'states': {0: {'name': (1, 1, 1), 'partition': 1}, 1: {'name': (1, 2, 2), 'partition': 2}, 2: {'name': (2, 2, 3), 'partition': 0}, 3: {'name': (2, 1, 3), 'partition': 0}}, 'atoms': {'b', 'a'}, 'alphabet': [], 'transitions': {0: {'!a & !b': 1, 'a & b': 3, 'a & !b': 2, 'b & !a': 0}, 1: {'a': 2, '!a': 1}, 2: {'true': 2}, 3: {'b': 3, '!b': 2}}, 'init_state': 0, 'pref_graph': {'nodes': {0: {'name': 'F(a)', 'partition': {2, 3}}, 1: {'name': 'G(b)', 'partition': {0}}, 2: {'name': '!((F(a) | G(b)))', 'partition': {1}}}, 'edges': {0: [0], 1: [0, 1], 2: [0, 1, 2]}}}}
2024-10-05 19:51:32.178 | INFO     | webapp:cb_btn_translate:637 - Input dictionary: {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'minimal'}
2024-10-05 19:51:32.179 | DEBUG    | prefltlf2pdfa.prefltlf:parse:231 - Parsing prefltlf formula with auto_complete='minimal': 
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 19:51:32.238 | DEBUG    | prefltlf2pdfa.prefltlf:_construct_spec_ir:676 - Intermediate representation based on raw input: 
['0:F(a)  >  1:G(b)']
2024-10-05 19:51:32.291 | DEBUG    | prefltlf2pdfa.prefltlf:_auto_complete:711 - Intermediate representation based on raw input: ['0:F(a)  >  1:G(b)', '0:F(a)  >=  2:!((F(a) | G(b)))', '1:G(b)  >=  2:!((F(a) | G(b)))', '2:!((F(a) | G(b)))  >=  2:!((F(a) | G(b)))']
2024-10-05 19:51:32.292 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:761 - Clauses from intermediate representation:
set_w={(0, 2), (1, 2), (2, 2)} 
set_p={(0, 1)} 
set_i=set() 
set_j=set()
2024-10-05 19:51:32.292 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:790 - Clauses after applying transitive and reflexive closures:
set_p={(0, 1), (0, 2), (1, 2)} 
set_i={(0, 0), (1, 1), (2, 2)} 
set_j=set()
2024-10-05 19:51:32.294 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:835 - Partial order for input specification:
phi={0: F(a), 1: G(b), 2: !((F(a) | G(b)))}
model={(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)}
model={'(F(a), G(b))', '(G(b), G(b))', '(F(a), F(a))', '(F(a), !((F(a) | G(b))))', '(!((F(a) | G(b))), !((F(a) | G(b))))', '(G(b), !((F(a) | G(b))))'}
2024-10-05 19:51:32.295 | DEBUG    | prefltlf2pdfa.prefltlf:translate:288 - Translating the formula to preference automaton under semantics=`semantics_mp_forall_exists`:
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 19:51:32.453 | DEBUG    | prefltlf2pdfa.prefltlf:translate:307 - Constructed Automata: {0: F(a), 1: G(b), 2: !((F(a) | G(b)))} 

======== F(a) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'a': 2, '~a': 1}, 2: {'true': 2}}}

======== G(b) ========
{'final_states': {1},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'b': 1, '~b': 2}, 2: {'true': 2}}}

======== !((F(a) | G(b))) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2, 3},
 'transitions': {1: {'a': 3, 'b & ~a': 1, '~a & ~b': 2},
                 2: {'a': 3, '~a': 2},
                 3: {'true': 3}}}

2024-10-05 19:51:32.507 | DEBUG    | prefltlf2pdfa.viz:paut2dot:145 - Options for paut2dot: sa_state=False, sa_class=False, sa_color=False, pg_state=False
2024-10-05 19:51:35.131 | INFO     | webapp:cb_btn_translate:659 - Output dictionary: {'input': {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'minimal'}, 'formula': {'f_str': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'atoms': ['a', 'b'], 'alphabet': [], 'phi': {0: 'F(a)', 1: 'G(b)', 2: '!((F(a) | G(b)))'}, 'relation': [(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)]}, 'pdfa': {'states': {0: {'name': (1, 1, 1), 'partition': 1}, 1: {'name': (1, 2, 2), 'partition': 2}, 2: {'name': (2, 2, 3), 'partition': 0}, 3: {'name': (2, 1, 3), 'partition': 0}}, 'atoms': {'a', 'b'}, 'alphabet': [], 'transitions': {0: {'a & !b': 2, 'a & b': 3, '!a & !b': 1, 'b & !a': 0}, 1: {'!a': 1, 'a': 2}, 2: {'true': 2}, 3: {'!b': 2, 'b': 3}}, 'init_state': 0, 'pref_graph': {'nodes': {0: {'name': 'F(a)', 'partition': {2, 3}}, 1: {'name': 'G(b)', 'partition': {0}}, 2: {'name': '!((F(a) | G(b)))', 'partition': {1}}}, 'edges': {0: [0], 1: [0, 1], 2: [0, 1, 2]}}}}
2024-10-05 19:52:21.768 | INFO     | webapp:cb_btn_translate:637 - Input dictionary: {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'minimal'}
2024-10-05 19:52:21.768 | DEBUG    | prefltlf2pdfa.prefltlf:parse:231 - Parsing prefltlf formula with auto_complete='minimal': 
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 19:52:21.821 | DEBUG    | prefltlf2pdfa.prefltlf:_construct_spec_ir:676 - Intermediate representation based on raw input: 
['0:F(a)  >  1:G(b)']
2024-10-05 19:52:21.869 | DEBUG    | prefltlf2pdfa.prefltlf:_auto_complete:711 - Intermediate representation based on raw input: ['0:F(a)  >  1:G(b)', '0:F(a)  >=  2:!((F(a) | G(b)))', '1:G(b)  >=  2:!((F(a) | G(b)))', '2:!((F(a) | G(b)))  >=  2:!((F(a) | G(b)))']
2024-10-05 19:52:21.870 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:761 - Clauses from intermediate representation:
set_w={(0, 2), (1, 2), (2, 2)} 
set_p={(0, 1)} 
set_i=set() 
set_j=set()
2024-10-05 19:52:21.870 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:790 - Clauses after applying transitive and reflexive closures:
set_p={(0, 1), (0, 2), (1, 2)} 
set_i={(0, 0), (1, 1), (2, 2)} 
set_j=set()
2024-10-05 19:52:21.871 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:835 - Partial order for input specification:
phi={0: F(a), 1: G(b), 2: !((F(a) | G(b)))}
model={(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)}
model={'(F(a), G(b))', '(G(b), G(b))', '(F(a), F(a))', '(F(a), !((F(a) | G(b))))', '(!((F(a) | G(b))), !((F(a) | G(b))))', '(G(b), !((F(a) | G(b))))'}
2024-10-05 19:52:21.872 | DEBUG    | prefltlf2pdfa.prefltlf:translate:288 - Translating the formula to preference automaton under semantics=`semantics_mp_forall_exists`:
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 19:52:22.265 | DEBUG    | prefltlf2pdfa.prefltlf:translate:307 - Constructed Automata: {0: F(a), 1: G(b), 2: !((F(a) | G(b)))} 

======== F(a) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'a': 2, '~a': 1}, 2: {'true': 2}}}

======== G(b) ========
{'final_states': {1},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'b': 1, '~b': 2}, 2: {'true': 2}}}

======== !((F(a) | G(b))) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2, 3},
 'transitions': {1: {'a': 3, 'b & ~a': 1, '~a & ~b': 2},
                 2: {'a': 3, '~a': 2},
                 3: {'true': 3}}}

2024-10-05 19:52:22.310 | DEBUG    | prefltlf2pdfa.viz:paut2dot:145 - Options for paut2dot: sa_state=False, sa_class=False, sa_color=False, pg_state=False
2024-10-05 19:52:24.991 | INFO     | webapp:cb_btn_translate:659 - Output dictionary: {'input': {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'minimal'}, 'formula': {'f_str': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'atoms': ['a', 'b'], 'alphabet': [], 'phi': {0: 'F(a)', 1: 'G(b)', 2: '!((F(a) | G(b)))'}, 'relation': [(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)]}, 'pdfa': {'states': {0: {'name': (1, 1, 1), 'partition': 1}, 1: {'name': (1, 2, 2), 'partition': 2}, 2: {'name': (2, 2, 3), 'partition': 0}, 3: {'name': (2, 1, 3), 'partition': 0}}, 'atoms': {'a', 'b'}, 'alphabet': [], 'transitions': {0: {'a & !b': 2, 'a & b': 3, '!a & !b': 1, 'b & !a': 0}, 1: {'!a': 1, 'a': 2}, 2: {'true': 2}, 3: {'!b': 2, 'b': 3}}, 'init_state': 0, 'pref_graph': {'nodes': {0: {'name': 'F(a)', 'partition': {2, 3}}, 1: {'name': 'G(b)', 'partition': {0}}, 2: {'name': '!((F(a) | G(b)))', 'partition': {1}}}, 'edges': {0: [0], 1: [0, 1], 2: [0, 1, 2]}}}}
2024-10-05 20:01:31.947 | INFO     | webapp:cb_btn_translate:637 - Input dictionary: {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'minimal'}
2024-10-05 20:01:31.947 | DEBUG    | prefltlf2pdfa.prefltlf:parse:231 - Parsing prefltlf formula with auto_complete='minimal': 
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 20:01:31.991 | DEBUG    | prefltlf2pdfa.prefltlf:_construct_spec_ir:676 - Intermediate representation based on raw input: 
['0:F(a)  >  1:G(b)']
2024-10-05 20:01:32.035 | DEBUG    | prefltlf2pdfa.prefltlf:_auto_complete:711 - Intermediate representation based on raw input: ['0:F(a)  >  1:G(b)', '0:F(a)  >=  2:!((F(a) | G(b)))', '1:G(b)  >=  2:!((F(a) | G(b)))', '2:!((F(a) | G(b)))  >=  2:!((F(a) | G(b)))']
2024-10-05 20:01:32.036 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:761 - Clauses from intermediate representation:
set_w={(0, 2), (1, 2), (2, 2)} 
set_p={(0, 1)} 
set_i=set() 
set_j=set()
2024-10-05 20:01:32.036 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:790 - Clauses after applying transitive and reflexive closures:
set_p={(0, 1), (0, 2), (1, 2)} 
set_i={(0, 0), (1, 1), (2, 2)} 
set_j=set()
2024-10-05 20:01:32.037 | DEBUG    | prefltlf2pdfa.prefltlf:_build_partial_order:835 - Partial order for input specification:
phi={0: F(a), 1: G(b), 2: !((F(a) | G(b)))}
model={(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)}
model={'(G(b), G(b))', '(!((F(a) | G(b))), !((F(a) | G(b))))', '(F(a), G(b))', '(G(b), !((F(a) | G(b))))', '(F(a), F(a))', '(F(a), !((F(a) | G(b))))'}
2024-10-05 20:01:32.037 | DEBUG    | prefltlf2pdfa.prefltlf:translate:288 - Translating the formula to preference automaton under semantics=`semantics_mp_forall_exists`:
prefltlf 2

# Formulas
F a
G b
#!(F(a) | G(b))

# Specification
>, 0, 1
#>, 0, 2
#>=, 1, 2
2024-10-05 20:01:32.154 | DEBUG    | prefltlf2pdfa.prefltlf:translate:307 - Constructed Automata: {0: F(a), 1: G(b), 2: !((F(a) | G(b)))} 

======== F(a) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'a': 2, '~a': 1}, 2: {'true': 2}}}

======== G(b) ========
{'final_states': {1},
 'init_state': 1,
 'states': {1, 2},
 'transitions': {1: {'b': 1, '~b': 2}, 2: {'true': 2}}}

======== !((F(a) | G(b))) ========
{'final_states': {2},
 'init_state': 1,
 'states': {1, 2, 3},
 'transitions': {1: {'a': 3, 'b & ~a': 1, '~a & ~b': 2},
                 2: {'a': 3, '~a': 2},
                 3: {'true': 3}}}

2024-10-05 20:01:32.174 | DEBUG    | prefltlf2pdfa.viz:paut2dot:145 - Options for paut2dot: sa_state=False, sa_class=False, sa_color=False, pg_state=False
2024-10-05 20:01:32.264 | INFO     | webapp:cb_btn_translate:659 - Output dictionary: {'input': {'spec': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'alphabet': None, 'options': {'show_sa_state': False, 'show_class': False, 'show_color': False, 'show_pg_state': False}, 'semantics': 'semantics_mp_ae', 'autocomplete': 'minimal'}, 'formula': {'f_str': 'prefltlf 2\n\n# Formulas\nF a\nG b\n#!(F(a) | G(b))\n\n# Specification\n>, 0, 1\n#>, 0, 2\n#>=, 1, 2', 'atoms': ['b', 'a'], 'alphabet': [], 'phi': {0: 'F(a)', 1: 'G(b)', 2: '!((F(a) | G(b)))'}, 'relation': [(0, 1), (1, 2), (0, 0), (1, 1), (0, 2), (2, 2)]}, 'pdfa': {'states': {0: {'name': (1, 1, 1), 'partition': 1}, 1: {'name': (1, 2, 2), 'partition': 2}, 2: {'name': (2, 2, 3), 'partition': 0}, 3: {'name': (2, 1, 3), 'partition': 0}}, 'atoms': {'b', 'a'}, 'alphabet': [], 'transitions': {0: {'b & !a': 0, 'a & b': 3, 'a & !b': 2, '!a & !b': 1}, 1: {'!a': 1, 'a': 2}, 2: {'true': 2}, 3: {'!b': 2, 'b': 3}}, 'init_state': 0, 'pref_graph': {'nodes': {0: {'name': 'F(a)', 'partition': {2, 3}}, 1: {'name': 'G(b)', 'partition': {0}}, 2: {'name': '!((F(a) | G(b)))', 'partition': {1}}}, 'edges': {0: [0], 1: [0, 1], 2: [0, 1, 2]}}}}
